import { FormBuilder, FormGroup } from "@angular/forms";
import { Type } from "../util";
import { FormBuilderConfiguration } from "../models";
export declare class RxFormBuilder {
    private formBuilder;
    private nestedProp;
    private conditionalObjectProps;
    private conditionalValidationInstance;
    private builderConfigurationConditionalObjectProps;
    private isNested;
    constructor(formBuilder: FormBuilder);
    private getInstanceContainer(instanceFunc);
    private setValue(formGroup, object);
    private extractExpressions(fomrBuilderConfiguration);
    private addFormControl(property, propertyValidators, propValidationConfig, instance);
    private additionalValidation(validations, propValidationConfig);
    private checkObjectPropAdditionalValidation<T>(instanceContainer, object);
    getObject(model: any | {
        [key: string]: any;
    }, entityObject?: {
        [key: string]: any;
    } | FormBuilderConfiguration, formBuilderConfiguration?: FormBuilderConfiguration): {
        [key: string]: any;
    };
    formGroup<T>(model: Type<T> | {
        [key: string]: any;
    }, entityObject?: {
        [key: string]: any;
    } | FormBuilderConfiguration, formBuilderConfiguration?: FormBuilderConfiguration): FormGroup;
}
