{
  "routes": [
    {
      "title": "Alpha",
      "description": "Alpha validation decorator will allow only alphabets to be entered. ",
      "path": "alpha",
      "loadChildren": "./alpha/alpha.module#AlphaModule"
    },
    {
      "title": "AlphaNumeric",
      "description": "Alpha Numeric validation decorator will allow only alphabets and numbers to be entered. ",
      "path": "alphaNumeric",
      "loadChildren": "./alphaNumeric/alphaNumeric.module#AlphaNumericModule"
    },
    {
      "title": "Contains",
      "description": "Contains validation decorator will check that value is in the input. ",
      "path": "contains",
      "loadChildren": "./contains/contains.module#ContainsModule"
    },
    {
      "title": "Compare",
      "description": "Compare validation decorator will compare two inputs. ",
      "path": "compare",
      "loadChildren": "./compare/compare.module#CompareModule"
    },
    {
      "title": "CreditCard",
      "description": "CreditCard validation decorator will check property value is creditcardtype or not. ",
      "path": "creditCard",
      "loadChildren": "./creditCard/creditCard.module#CreditCardModule"
    },
    {
      "title": "Digit",
      "description": "Digit validation decorator will allow only digits to be entered. ",
      "path": "digit",
      "loadChildren": "./digit/digit.module#DigitModule"
    },
    {
      "title": "Email",
      "description": "Email validation decorator will allow only emails to be entered. ",
      "path": "email",
      "loadChildren": "./email/email.module#EmailModule"
    },
    {
      "title": "GreaterThan",
      "description": "Greater than validation decorator will check that input property is greater than related field input.",
      "path": "greaterThan",
      "loadChildren": "./greaterThan/greaterThan.module#GreaterThanModule"
    },
    {
      "title": "GreaterThanEqualTo",
      "description": "Greater than equal to validation decorator will check that input property is greater than equal to value. ",
      "path": "greaterThanEqualTo",
      "loadChildren": "./greaterThanEqualTo/greaterThanEqualTo.module#GreaterThanEqualToModule"
    },
    {
      "title": "HexColor",
      "description": "HexColor validation decorator will allow only Hex Color to be entered.",
      "path": "hexColor",
      "loadChildren": "./hexColor/hexColor.module#HexColorModule"
    },
    {
      "title": "Json",
      "description": "json validation decorator will allow only Json to be entered.",
      "path": "json",
      "loadChildren": "./json/json.module#JsonModule"
    },
    {
      "title": "LessThan",
      "description": "Less than validation decorator will check that input property is less than value. ",
      "path": "lessThan",
      "loadChildren": "./lessThan/lessThan.module#LessThanModule"
    },
    {
      "title": "LessThanEqualTo",
      "description": "Less than equal to validation decorator will check that input property is less than equal to value. ",
      "path": "lessThanEqualTo",
      "loadChildren": "./lessThanEqualTo/lessThanEqualTo.module#LessThanEqualToModule"
    },
    {
      "title": "LowerCase",
      "description": "lowerCase validation decorator will allow only lowercase to be entered. ",
      "path": "lowerCase",
      "loadChildren": "./lowerCase/lowerCase.module#LowerCaseModule"
    },
    {
      "title": "MaxLength",
      "description": "MaxLength validation decorator will allow only maximum length be entered upto value parameter.",
      "path": "maxLength",
      "loadChildren": "./maxLength/maxLength.module#MaxLengthModule"
    },
    {
      "title": "MaxNumber",
      "description": "MaxNumber validation decorator will allow only maximum number be entered upto value parameter.",
      "path": "maxNumber",
      "loadChildren": "./maxNumber/maxNumber.module#MaxNumberModule"
    },
    {
      "title": "MaxDate",
      "description": "MaxDate validation decorator will allow only maximum date be entered upto value parameter. ",
      "path": "maxDate",
      "loadChildren": "./maxDate/maxDate.module#MaxDateModule"
    },
    {
      "title": "MinDate",
      "description": "Minimum Date validation decorator will allow only minimum date be entered upto value parameter.",
      "path": "minDate",
      "loadChildren": "./minDate/minDate.module#MinDateModule"
    },
    {
      "title": "MinLength",
      "description": "MinLength validation decorator will allow only minimum length be entered upto value parameter. ",
      "path": "minLength",
      "loadChildren": "./minLength/minLength.module#MinLengthModule"
    },
    {
      "title": "MinNumber",
      "description": "MinNumber validation decorator will allow only minimum number be entered upto value parameter. ",
      "path": "minNumber",
      "loadChildren": "./minNumber/minNumber.module#MinNumberModule"
    },
    {
      "title": "Password",
      "description": "Password validation decorator will allow only password pattern according for PasswordValidation parameters to be entered. ",
      "path": "password",
      "loadChildren": "./password/password.module#PasswordModule"
    },
    {
      "title": "Pattern",
      "description": "Pattern validation decorator will allow only match input as pattern to be entered.",
      "path": "pattern",
      "loadChildren": "./pattern/pattern.module#PatternModule"
    },
    {
      "title": "Range",
      "description": "Range validation decorator will allow only in specify range will be entered. ",
      "path": "range",
      "loadChildren": "./range/range.module#RangeModule"
    },
    {
      "title": "Required",
      "description": "Required validation decorator will check that value is entered or not in the property.",
      "path": "required",
      "loadChildren": "./required/required.module#RequiredModule"
    },
    {
      "title": "Time",
      "description": "Time validation decorator will allow only time format to be entered.",
      "path": "time",
      "loadChildren": "./time/time.module#TimeModule"
    },
    {
      "title": "UpperCase",
      "description": "Upper Case validation decorator will allow only uppercase to be entered.",
      "path": "upperCase",
      "loadChildren": "./upperCase/upperCase.module#UpperCaseModule"
    },
    {
      "title": "Url",
      "description": "Url validation decorator will check that value is url or not in the property.",
      "path": "url",
      "loadChildren": "./url/url.module#UrlModule"
    }
  ]
}