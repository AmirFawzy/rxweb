{"allowSecondsExample":{"Notes":null,"Component":null,"Html":null,"Model":"@time({allowSeconds:true }) \r\ntotalOutTime: string;"},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object."],"Component":null,"Html":null,"Model":"@time({conditionalExpression:(x,y) => x.entryPlace == \"Lunch Room\"  }) \r\ntotalIn: string;"},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> datatype."],"Component":null,"Html":null,"Model":"@time({conditionalExpression:'x => x.entryPlace == \"Lunch Room\"' }) \r\nentryTime: string;"},"messageExample":{"Notes":null,"Component":null,"Html":null,"Model":"@time({message:'You can enter only time format data' }) \r\nexitTime: string;"},"complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-time-complete',\r\n    templateUrl: './time-complete.component.html'\r\n})\r\nexport class TimeCompleteComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Total In' or 'Entry Time', then you need to add 'Entry Place' input as 'Lunch Room'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total In</label>\r\n      <input type=\"text\" formControlName=\"totalIn\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of time on 'Entry Time' field, then enter the value of 'Lunch Room' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalIn.errors\">{{attandanceDetailFormGroup.controls.totalIn.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of time on 'Entry Time' field, then enter the value of 'Lunch Room' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  time,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@time({conditionalExpression:(x,y) => x.entryPlace == \"Lunch Room\"  }) \r\n\ttotalIn: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@time({conditionalExpression:'x => x.entryPlace == \"Lunch Room\"' }) \r\n\tentryTime: string;\r\n\r\n\t@time({allowSeconds:true }) \r\n\ttotalOutTime: string;\r\n\r\n\t@time({message:'You can enter only time format data' }) \r\n\texitTime: string;\r\n\r\n}\r\n"},"conditionalExpression":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-time-conditionalExpression',\r\n    templateUrl: './time-conditional-expression.component.html'\r\n})\r\nexport class TimeConditionalExpressionComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Total In' or 'Entry Time', then you need to add 'Entry Place' input as 'Lunch Room'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of time on 'Entry Time' field, then enter the value of 'Lunch Room' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total In</label>\r\n      <input type=\"text\" formControlName=\"totalIn\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of time on 'Entry Time' field, then enter the value of 'Lunch Room' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalIn.errors\">{{attandanceDetailFormGroup.controls.totalIn.errors.time.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  time,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@time({conditionalExpression:'x => x.entryPlace == \"Lunch Room\"' }) \r\n\tentryTime: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@time({conditionalExpression:(x,y) => x.entryPlace == \"Lunch Room\"  }) \r\n\ttotalIn: string;\r\n\r\n}\r\n"},"allowSeconds":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-time-allowSeconds',\r\n    templateUrl: './time-allow-seconds.component.html'\r\n})\r\nexport class TimeAllowSecondsComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  time,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@time({allowSeconds:true }) \r\n\ttotalOutTime: string;\r\n\r\n}\r\n"},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-time-message',\r\n    templateUrl: './time-message.component.html'\r\n})\r\nexport class TimeMessageComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  time,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@time({message:'You can enter only time format data' }) \r\n\texitTime: string;\r\n\r\n}\r\n"},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-time-dynamic',\r\n    templateUrl: './time-dynamic.component.html'\r\n})\r\nexport class TimeDynamicComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\r\n\t\r\n\t\t\tentryTime : {\r\n\t\t\t\ttime : {conditionalExpression:'x => x.entryPlace == \"Lunch Room\"',} \r\n\t\t\t},\t\r\n\t\t\ttotalOutTime : {\r\n\t\t\t\ttime : {allowSeconds:true,} \r\n\t\t\t},\t\r\n\t\t\texitTime : {\r\n\t\t\t\ttime : {message:'You can enter only time format data',} \r\n\t\t\t},\t\t};\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Total In' or 'Entry Time', then you need to add 'Entry Place' input as 'Lunch Room'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of time on 'Entry Time' field, then enter the value of 'Lunch Room' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  time,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@prop()\r\n\tentryTime: string;\r\n\r\n\t@prop()\r\n\ttotalOutTime: string;\r\n\r\n\t@prop()\r\n\texitTime: string;\r\n\r\n}\r\n"},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-time-add',\r\n    templateUrl: './time-add.component.html'\r\n})\r\nexport class TimeAddComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  time,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@time() \r\n\tentryTime: string;\r\n\r\n}\r\n"},"edit":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-time-edit',\r\n    templateUrl: './time-edit.component.html'\r\n})\r\nexport class TimeEditComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,        private http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/time/edit/attandance-detail-data.json').subscribe(attandanceDetail => {\r\n            this.attandanceDetailFormGroup = this.formBuilder.formGroup<AttandanceDetail>(AttandanceDetail,attandanceDetail);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.time.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  time,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@time() \r\n\tentryTime: string;\r\n\r\n}\r\n"}}