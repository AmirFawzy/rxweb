{"valueExample":{"Notes":null,"Component":null,"Html":null,"Model":"@maxDate({value:new Date(2018,7,30)  ,conditionalExpression:(x,y) => x.userName == \"John\"  }) \r\nbirthDate: Date;"},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object."],"Component":null,"Html":null,"Model":"@maxDate({value:new Date(2018,7,30)  ,conditionalExpression:(x,y) => x.userName == \"John\"  }) \r\nbirthDate: Date;"},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> datatype."],"Component":null,"Html":null,"Model":"@maxDate({value:new Date(2018,7,30)  ,conditionalExpression:'x => x.userName == \"John\"' }) \r\nadmissionDate: Date;"},"messageExample":{"Notes":null,"Component":null,"Html":null,"Model":"@maxDate({value:new Date(2018,7,30)  ,message:'{{0}} exceeds the Maximum Date Limit' }) \r\nregistrationDate: Date;"},"complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxDate-complete',\r\n    templateUrl: './max-date-complete.component.html'\r\n})\r\nexport class MaxDateCompleteComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n\t\t<input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Date</label>\r\n\t\t<input type=\"text\" formControlName=\"birthDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Max Date on 'Birth date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthDate.errors\">{{userFormGroup.controls.birthDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Date</label>\r\n\t\t<input type=\"text\" formControlName=\"admissionDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Max Date on 'Admission Date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionDate.errors\">{{userFormGroup.controls.admissionDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Registration Date</label>\r\n\t\t<input type=\"text\" formControlName=\"registrationDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">you can enter MaxDate upto 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.registrationDate.errors\">{{userFormGroup.controls.registrationDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  maxDate,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tuserName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxDate({value:new Date(2018,7,30)  ,conditionalExpression:(x,y) => x.userName == \"John\"  }) \r\n\tbirthDate: Date;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxDate({value:new Date(2018,7,30)  ,conditionalExpression:'x => x.userName == \"John\"' }) \r\n\tadmissionDate: Date;\r\n\r\n\t@maxDate({value:new Date(2018,7,30)  ,message:'{{0}} exceeds the Maximum Date Limit' }) \r\n\tregistrationDate: Date;\r\n\r\n}\r\n"},"value":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxDate-value',\r\n    templateUrl: './max-date-value.component.html'\r\n})\r\nexport class MaxDateValueComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n\t\t<input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Date</label>\r\n\t\t<input type=\"text\" formControlName=\"admissionDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Max Date on 'Admission Date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionDate.errors\">{{userFormGroup.controls.admissionDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Date</label>\r\n\t\t<input type=\"text\" formControlName=\"birthDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Max Date on 'Birth date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthDate.errors\">{{userFormGroup.controls.birthDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  maxDate,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tuserName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxDate({value:new Date(2018,7,30)  ,conditionalExpression:'x => x.userName == \"John\"' }) \r\n\tadmissionDate: Date;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxDate({value:new Date(2018,7,30)  ,conditionalExpression:(x,y) => x.userName == \"John\"  }) \r\n\tbirthDate: Date;\r\n\r\n}\r\n"},"conditionalExpression":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxDate-conditionalExpression',\r\n    templateUrl: './max-date-conditional-expression.component.html'\r\n})\r\nexport class MaxDateConditionalExpressionComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n\t\t<input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Date</label>\r\n\t\t<input type=\"text\" formControlName=\"admissionDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Max Date on 'Admission Date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionDate.errors\">{{userFormGroup.controls.admissionDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Date</label>\r\n\t\t<input type=\"text\" formControlName=\"birthDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Max Date on 'Birth date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthDate.errors\">{{userFormGroup.controls.birthDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  maxDate,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tuserName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxDate({value:new Date(2018,7,30)  ,conditionalExpression:'x => x.userName == \"John\"' }) \r\n\tadmissionDate: Date;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxDate({value:new Date(2018,7,30)  ,conditionalExpression:(x,y) => x.userName == \"John\"  }) \r\n\tbirthDate: Date;\r\n\r\n}\r\n"},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxDate-message',\r\n    templateUrl: './max-date-message.component.html'\r\n})\r\nexport class MaxDateMessageComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Registration Date</label>\r\n\t\t<input type=\"text\" formControlName=\"registrationDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">you can enter MaxDate upto 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.registrationDate.errors\">{{userFormGroup.controls.registrationDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  maxDate,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@maxDate({value:new Date(2018,7,30)  ,message:'{{0}} exceeds the Maximum Date Limit' }) \r\n\tregistrationDate: Date;\r\n\r\n}\r\n"},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,\r\n} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxDate-dynamic',\r\n    templateUrl: './max-date-dynamic.component.html'\r\n})\r\nexport class MaxDateDynamicComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tbirthDate : {\r\n\t\t\t\tmaxDate :  {value:new Date(2018,7,30),conditionalExpression:(x,y) => x.userName == \"John\" ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tadmissionDate : {\r\n\t\t\t\tmaxDate :  {value:new Date(2018,7,30),conditionalExpression:'x => x.userName == \"John\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tregistrationDate : {\r\n\t\t\t\tmaxDate :  {value:new Date(2018,7,30),message:'{{0}} exceeds the Maximum Date Limit',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n\t\t<input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Date</label>\r\n\t\t<input type=\"text\" formControlName=\"birthDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Max Date on 'Birth date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthDate.errors\">{{userFormGroup.controls.birthDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Date</label>\r\n\t\t<input type=\"text\" formControlName=\"admissionDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Max Date on 'Admission Date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionDate.errors\">{{userFormGroup.controls.admissionDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Registration Date</label>\r\n\t\t<input type=\"text\" formControlName=\"registrationDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">you can enter MaxDate upto 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.registrationDate.errors\">{{userFormGroup.controls.registrationDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  maxDate,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tuserName: string;\r\n\r\n\t@prop()\r\n\tbirthDate: Date;\r\n\r\n\t@prop()\r\n\tadmissionDate: Date;\r\n\r\n\t@prop()\r\n\tregistrationDate: Date;\r\n\r\n}\r\n"},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxDate-add',\r\n    templateUrl: './max-date-add.component.html'\r\n})\r\nexport class MaxDateAddComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Registration Date</label>\r\n\t\t<input type=\"text\" formControlName=\"registrationDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">you can enter Max Date upto 30th july 2018<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.registrationDate.errors\">{{userFormGroup.controls.registrationDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  maxDate,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@maxDate({value:new Date(2018,7,30) }) \r\n\tregistrationDate: Date;\r\n\r\n}\r\n"},"edit":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxDate-edit',\r\n    templateUrl: './max-date-edit.component.html'\r\n})\r\nexport class MaxDateEditComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/maxDate/edit/user-data.json').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Registration Date</label>\r\n\t\t<input type=\"text\" formControlName=\"registrationDate\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">you can enter Max Date upto 30th july 2018<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.registrationDate.errors\">{{userFormGroup.controls.registrationDate.errors.maxDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  maxDate,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@maxDate({value:new Date(2018,7,30) }) \r\n\tregistrationDate: Date;\r\n\r\n}\r\n"}}