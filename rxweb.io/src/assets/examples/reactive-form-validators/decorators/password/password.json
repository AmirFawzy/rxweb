{"validationExample":{"Notes":null,"Component":null,"Html":null,"Model":"@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\nnewPassword: string;"},"messageExample":{"Notes":null,"Component":null,"Html":null,"Model":"@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\noldPassword: string;"},"complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-complete',\r\n    templateUrl: './password-complete.component.html'\r\n})\r\nexport class PasswordCompleteComponent implements OnInit {\r\n\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        this.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>New Password</label>\r\n    <input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Old Password</label>\r\n    <input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  password,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tnewPassword: string;\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\n\toldPassword: string;\r\n\r\n}\r\n"},"validation":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-validation',\r\n    templateUrl: './password-validation.component.html'\r\n})\r\nexport class PasswordValidationComponent implements OnInit {\r\n\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        this.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>New Password</label>\r\n    <input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  password,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tnewPassword: string;\r\n\r\n}\r\n"},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-message',\r\n    templateUrl: './password-message.component.html'\r\n})\r\nexport class PasswordMessageComponent implements OnInit {\r\n\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        this.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Old Password</label>\r\n    <input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  password,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\n\toldPassword: string;\r\n\r\n}\r\n"},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,\r\n} from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-dynamic',\r\n    templateUrl: './password-dynamic.component.html'\r\n})\r\nexport class PasswordDynamicComponent implements OnInit {\r\n\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tnewPassword : {\r\n\t\t\t\tpassword :  {validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true},} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\toldPassword : {\r\n\t\t\t\tpassword :  {validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true},message:'Password is not valid',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\tthis.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>New Password</label>\r\n    <input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Old Password</label>\r\n    <input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  password,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@prop()\r\n\tnewPassword: string;\r\n\r\n\t@prop()\r\n\toldPassword: string;\r\n\r\n}\r\n"},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-add',\r\n    templateUrl: './password-add.component.html'\r\n})\r\nexport class PasswordAddComponent implements OnInit {\r\n\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let loginInfo = new LoginInfo();\r\n        this.loginInfoFormGroup = this.formBuilder.formGroup(loginInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.password.errors\">{{loginInfoFormGroup.controls.password.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  password,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tpassword: string;\r\n\r\n}\r\n"},"edit":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { LoginInfo } from './login-info.model';\r\n\r\n@Component({\r\n    selector: 'app-password-edit',\r\n    templateUrl: './password-edit.component.html'\r\n})\r\nexport class PasswordEditComponent implements OnInit {\r\n\r\n    loginInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/password/edit/login-info-data.json').subscribe(loginInfo => {\r\n            this.loginInfoFormGroup = this.formBuilder.formGroup<LoginInfo>(LoginInfo,loginInfo);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.password.errors\">{{loginInfoFormGroup.controls.password.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  password,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tpassword: string;\r\n\r\n}\r\n"}}