{"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object."],"Component":null,"Html":null,"Model":"@json({conditionalExpression:(x,y)=>{ return x.location == \"{CountryName:India}\" } }) \r\naddressJson: string;"},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> datatype."],"Component":null,"Html":null,"Model":"@json({conditionalExpression:x => x.location == \"{CountryName:India}\"  ,message:'Enter the text in JSON format --> {key:value}' }) \r\nlocationJson: string;"},"messageExample":{"Notes":null,"Component":null,"Html":null,"Model":"@json({message:'Enter only JSON type data' }) \r\ncontactJson: string;"},"complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-complete',\r\n    templateUrl: './json-complete.component.html'\r\n})\r\nexport class JsonCompleteComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location</label>\r\n    <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is '{CountryName:India}'  in Location textbox.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Address Json</label>\r\n    <input type=\"text\" formControlName=\"addressJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Address Json' then you need to add 'Location' input as '{CountryName:India}'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.addressJson.errors\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Location Json</label>\r\n    <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as '{CountryName:India}'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Contact Json</label>\r\n    <input type=\"text\" formControlName=\"contactJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.contactJson.errors\">{{jsonInfoFormGroup.controls.contactJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@json({conditionalExpression:(x,y)=>{ return x.location == \"{CountryName:India}\" } }) \r\n\taddressJson: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@json({conditionalExpression:x => x.location == \"{CountryName:India}\"  ,message:'Enter the text in JSON format --> {key:value}' }) \r\n\tlocationJson: string;\r\n\r\n\t@json({message:'Enter only JSON type data' }) \r\n\tcontactJson: string;\r\n\r\n}\r\n"},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-message',\r\n    templateUrl: './json-message.component.html'\r\n})\r\nexport class JsonMessageComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location</label>\r\n    <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is '{CountryName:India}'  in Location textbox.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n}\r\n"},"conditionalExpression":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-conditionalExpression',\r\n    templateUrl: './json-conditional-expression.component.html'\r\n})\r\nexport class JsonConditionalExpressionComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location</label>\r\n    <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is '{CountryName:India}'  in Location textbox.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Location Json</label>\r\n    <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as '{CountryName:India}'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Address Json</label>\r\n    <input type=\"text\" formControlName=\"addressJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Address Json' then you need to add 'Location' input as '{CountryName:India}'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.addressJson.errors\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@json({conditionalExpression:x => x.location == \"{CountryName:India}\"  ,message:'Enter the text in JSON format --> {key:value}' }) \r\n\tlocationJson: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@json({conditionalExpression:(x,y)=>{ return x.location == \"{CountryName:India}\" } }) \r\n\taddressJson: string;\r\n\r\n}\r\n"},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,\r\n} from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-dynamic',\r\n    templateUrl: './json-dynamic.component.html'\r\n})\r\nexport class JsonDynamicComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\taddressJson : {\r\n\t\t\t\tjson :  {conditionalExpression:(x,y)=>{ return x.location == \"{CountryName:India}\" },} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tlocationJson : {\r\n\t\t\t\tjson :  {conditionalExpression:x => x.location == \"{CountryName:India}\",message:'Enter the text in JSON format --> {key:value}',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tcontactJson : {\r\n\t\t\t\tjson :  {message:'Enter only JSON type data',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\tthis.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location</label>\r\n    <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is '{CountryName:India}'  in Location textbox.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Address Json</label>\r\n    <input type=\"text\" formControlName=\"addressJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Address Json' then you need to add 'Location' input as '{CountryName:India}'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.addressJson.errors\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Location Json</label>\r\n    <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as '{CountryName:India}'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Contact Json</label>\r\n    <input type=\"text\" formControlName=\"contactJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.contactJson.errors\">{{jsonInfoFormGroup.controls.contactJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t@prop()\r\n\taddressJson: string;\r\n\r\n\t@prop()\r\n\tlocationJson: string;\r\n\r\n\t@prop()\r\n\tcontactJson: string;\r\n\r\n}\r\n"},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-add',\r\n    templateUrl: './json-add.component.html'\r\n})\r\nexport class JsonAddComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location Json</label>\r\n    <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@json() \r\n\tlocationJson: string;\r\n\r\n}\r\n"},"edit":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-edit',\r\n    templateUrl: './json-edit.component.html'\r\n})\r\nexport class JsonEditComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/json/edit/json-info-data.json').subscribe(jsonInfo => {\r\n            this.jsonInfoFormGroup = this.formBuilder.formGroup<JsonInfo>(JsonInfo,jsonInfo);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location Json</label>\r\n    <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@json() \r\n\tlocationJson: string;\r\n\r\n}\r\n"}}