{"creditCardTypesExample":{"Notes":null,"Component":null,"Html":null,"Model":"@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\nvisaCard: string;"},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object."],"Component":null,"Html":null,"Model":"@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\nvisaCard: string;"},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> datatype."],"Component":null,"Html":null,"Model":"@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\notherVisaCard: string;"},"messageExample":{"Notes":null,"Component":null,"Html":null,"Model":"@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\nvisaCard: string;"},"complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-complete',\r\n    templateUrl: './credit-card-complete.component.html'\r\n})\r\nexport class CreditCardCompleteComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>American Express</label>\r\n    <input type=\"text\" formControlName=\"americanExpressCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'American Express' then you need to add 'card type' input as 'AmericanExpress'.<br/></small>\r\n    <small class=\"form-text text-muted\">Message comes from Reactive Form Config<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.americanExpressCard.errors\">{{userFormGroup.controls.americanExpressCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Maestro Card</label>\r\n    <input type=\"text\" formControlName=\"maestroCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MaestroCard Card' then you need to add 'card type' input as 'maestro'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maestroCard.errors\">{{userFormGroup.controls.maestroCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>JCB Card</label>\r\n    <input type=\"text\" formControlName=\"jcbCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'JCB Card' then you need to add 'card type' input as 'jcb'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.jcbCard.errors\">{{userFormGroup.controls.jcbCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Discover Card</label>\r\n    <input type=\"text\" formControlName=\"discoverCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Discover Card' then you need to add 'card type' input as 'discover'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.discoverCard.errors\">{{userFormGroup.controls.discoverCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Master Card</label>\r\n    <input type=\"text\" formControlName=\"masterCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Master Card' then you need to add 'card type' input as 'master'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.masterCard.errors\">{{userFormGroup.controls.masterCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Diners Club Card</label>\r\n    <input type=\"text\" formControlName=\"dinersClubCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Diners Club Card' then you need to add 'card type' input as 'dinersClubCard'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.dinersClubCard.errors\">{{userFormGroup.controls.dinersClubCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  creditCard,prop, CreditCardType, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\n\tvisaCard: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\n\totherVisaCard: string;\r\n\r\n\t@creditCard({creditCardTypes:[ CreditCardType.AmericanExpress ]  ,conditionalExpression:'x => x.cardType == \"AmericanExpress\"' }) \r\n\tamericanExpressCard: string;\r\n\r\n\t@creditCard({creditCardTypes:[ CreditCardType.Maestro ]  ,conditionalExpression:'x => x.cardType == \"maestroCard\"' }) \r\n\tmaestroCard: string;\r\n\r\n\t@creditCard({creditCardTypes:[ CreditCardType.JCB ]  ,conditionalExpression:'x => x.cardType == \"jcbCard\"' }) \r\n\tjcbCard: string;\r\n\r\n\t@creditCard({creditCardTypes:[ CreditCardType.Discover ]  ,conditionalExpression:'x => x.cardType == \"discoverCard\"' }) \r\n\tdiscoverCard: string;\r\n\r\n\t@creditCard({creditCardTypes:[ CreditCardType.MasterCard ]  ,conditionalExpression:'x => x.cardType == \"masterCard\"' }) \r\n\tmasterCard: string;\r\n\r\n\t@creditCard({creditCardTypes:[ CreditCardType.DinersClub ]  ,conditionalExpression:'x => x.cardType == \"dinersClubCard\"' }) \r\n\tdinersClubCard: string;\r\n\r\n}\r\n"},"creditCardTypes":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-creditCardTypes',\r\n    templateUrl: './credit-card-credit-card-types.component.html'\r\n})\r\nexport class CreditCardCreditCardTypesComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  creditCard,prop, CreditCardType, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\n\totherVisaCard: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\n\tvisaCard: string;\r\n\r\n}\r\n"},"conditionalExpression":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-conditionalExpression',\r\n    templateUrl: './credit-card-conditional-expression.component.html'\r\n})\r\nexport class CreditCardConditionalExpressionComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  creditCard,prop, CreditCardType, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\n\totherVisaCard: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\n\tvisaCard: string;\r\n\r\n}\r\n"},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-message',\r\n    templateUrl: './credit-card-message.component.html'\r\n})\r\nexport class CreditCardMessageComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  creditCard,prop, CreditCardType, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' }) \r\n\totherVisaCard: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' }) \r\n\tvisaCard: string;\r\n\r\n}\r\n"},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,\r\n\tCreditCardType\r\n} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-dynamic',\r\n    templateUrl: './credit-card-dynamic.component.html'\r\n})\r\nexport class CreditCardDynamicComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tvisaCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[CreditCardType.Visa],conditionalExpression:(x,y) => x.cardType == \"visa\" ,message:'Invalid Visa Credit Card Number.',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\totherVisaCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[CreditCardType.Visa],conditionalExpression:'x => x.cardType == \"visa\"',message:'Invalid Visa Credit Card Number.',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tamericanExpressCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.AmericanExpress ],conditionalExpression:'x => x.cardType == \"AmericanExpress\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tmaestroCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.Maestro ],conditionalExpression:'x => x.cardType == \"maestroCard\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tjcbCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.JCB ],conditionalExpression:'x => x.cardType == \"jcbCard\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tdiscoverCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.Discover ],conditionalExpression:'x => x.cardType == \"discoverCard\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tmasterCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.MasterCard ],conditionalExpression:'x => x.cardType == \"masterCard\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tdinersClubCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.DinersClub ],conditionalExpression:'x => x.cardType == \"dinersClubCard\"',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>American Express</label>\r\n    <input type=\"text\" formControlName=\"americanExpressCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'American Express' then you need to add 'card type' input as 'AmericanExpress'.<br/></small>\r\n    <small class=\"form-text text-muted\">Message comes from Reactive Form Config<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.americanExpressCard.errors\">{{userFormGroup.controls.americanExpressCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Maestro Card</label>\r\n    <input type=\"text\" formControlName=\"maestroCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MaestroCard Card' then you need to add 'card type' input as 'maestro'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maestroCard.errors\">{{userFormGroup.controls.maestroCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>JCB Card</label>\r\n    <input type=\"text\" formControlName=\"jcbCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'JCB Card' then you need to add 'card type' input as 'jcb'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.jcbCard.errors\">{{userFormGroup.controls.jcbCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Discover Card</label>\r\n    <input type=\"text\" formControlName=\"discoverCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Discover Card' then you need to add 'card type' input as 'discover'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.discoverCard.errors\">{{userFormGroup.controls.discoverCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Master Card</label>\r\n    <input type=\"text\" formControlName=\"masterCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Master Card' then you need to add 'card type' input as 'master'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.masterCard.errors\">{{userFormGroup.controls.masterCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Diners Club Card</label>\r\n    <input type=\"text\" formControlName=\"dinersClubCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Diners Club Card' then you need to add 'card type' input as 'dinersClubCard'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.dinersClubCard.errors\">{{userFormGroup.controls.dinersClubCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  creditCard,prop, CreditCardType, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tcardType: string;\r\n\r\n\t@prop()\r\n\tvisaCard: string;\r\n\r\n\t@prop()\r\n\totherVisaCard: string;\r\n\r\n\t@prop()\r\n\tamericanExpressCard: string;\r\n\r\n\t@prop()\r\n\tmaestroCard: string;\r\n\r\n\t@prop()\r\n\tjcbCard: string;\r\n\r\n\t@prop()\r\n\tdiscoverCard: string;\r\n\r\n\t@prop()\r\n\tmasterCard: string;\r\n\r\n\t@prop()\r\n\tdinersClubCard: string;\r\n\r\n}\r\n"},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-add',\r\n    templateUrl: './credit-card-add.component.html'\r\n})\r\nexport class CreditCardAddComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Credit Card No.</label>\r\n    <input type=\"text\" formControlName=\"creditCardNumber\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Enter Visa Card No<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.creditCardNumber.errors\">{{userFormGroup.controls.creditCardNumber.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  creditCard,prop, CreditCardType, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@creditCard({creditCardTypes:[ CreditCardType.Visa ] }) \r\n\tcreditCardNumber: string;\r\n\r\n}\r\n"},"edit":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-edit',\r\n    templateUrl: './credit-card-edit.component.html'\r\n})\r\nexport class CreditCardEditComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/creditCard/edit/user-data.json').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Credit Card No.</label>\r\n    <input type=\"text\" formControlName=\"creditCardNumber\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Enter Visa Card No<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.creditCardNumber.errors\">{{userFormGroup.controls.creditCardNumber.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  creditCard,prop, CreditCardType, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@creditCard({creditCardTypes:[ CreditCardType.Visa ] }) \r\n\tcreditCardNumber: string;\r\n\r\n}\r\n"}}