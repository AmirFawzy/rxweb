{"fieldNameExample":{"Notes":null,"Component":null,"Html":null,"Model":"@compare({fieldName:'password'  ,message:'Both Input is not matched' }) \r\nconfirmPassword: string;"},"messageExample":{"Notes":null,"Component":null,"Html":null,"Model":"@compare({fieldName:'password'  ,message:'Both Input is not matched' }) \r\nconfirmPassword: string;"},"complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-complete',\r\n    templateUrl: './compare-complete.component.html'\r\n})\r\nexport class CompareCompleteComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Confirm Password</label>\r\n    <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@compare({fieldName:'password'  ,message:'Both Input is not matched' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n"},"fieldName":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-fieldName',\r\n    templateUrl: './compare-field-name.component.html'\r\n})\r\nexport class CompareFieldNameComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Confirm Password</label>\r\n    <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@compare({fieldName:'password'  ,message:'Both Input is not matched' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n"},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-message',\r\n    templateUrl: './compare-message.component.html'\r\n})\r\nexport class CompareMessageComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Confirm Password</label>\r\n    <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@compare({fieldName:'password'  ,message:'Both Input is not matched' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n"},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,\r\n} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-dynamic',\r\n    templateUrl: './compare-dynamic.component.html'\r\n})\r\nexport class CompareDynamicComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tconfirmPassword : {\r\n\t\t\t\tcompare :  {fieldName:'password',message:'Both Input is not matched',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Confirm Password</label>\r\n    <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@prop()\r\n\tconfirmPassword: string;\r\n\r\n}\r\n"},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-add',\r\n    templateUrl: './compare-add.component.html'\r\n})\r\nexport class CompareAddComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>New Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Confirm Password</label>\r\n    <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@compare({fieldName:'password' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n"},"edit":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-compare-edit',\r\n    templateUrl: './compare-edit.component.html'\r\n})\r\nexport class CompareEditComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/compare/edit/user-data.json').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Confirm Password</label>\r\n    <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  compare,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tpassword: string;\r\n\r\n\t@compare({fieldName:'password' }) \r\n\tconfirmPassword: string;\r\n\r\n}\r\n"}}