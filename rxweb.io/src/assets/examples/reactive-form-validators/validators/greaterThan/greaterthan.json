{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-complete-validator',\r\n    templateUrl: './greater-than-complete.component.html'\r\n})\r\nexport class GreaterThanCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tage:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmemberAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvoterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\totherAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,message:'Please enter number greater than 0.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n    <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Member Age</label>\r\n    <input type=\"text\" formControlName=\"memberAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.memberAge.errors\">{{userFormGroup.controls.memberAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Voter Age</label>\r\n    <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Age</label>\r\n    <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"fieldName":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-fieldName-validator',\r\n    templateUrl: './greater-than-field-name.component.html'\r\n})\r\nexport class GreaterThanFieldNameValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tage:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvoterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmemberAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n    <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Voter Age</label>\r\n    <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Member Age</label>\r\n    <input type=\"text\" formControlName=\"memberAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.memberAge.errors\">{{userFormGroup.controls.memberAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"fieldNameExample":{"Notes":[],"Component":"","Html":"","Model":"voterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], "},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-conditionalExpression-validator',\r\n    templateUrl: './greater-than-conditional-expression.component.html'\r\n})\r\nexport class GreaterThanConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tage:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvoterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmemberAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n    <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Voter Age</label>\r\n    <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Member Age</label>\r\n    <input type=\"text\" formControlName=\"memberAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.memberAge.errors\">{{userFormGroup.controls.memberAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding < span class='highlighted'>conditionalExpression</span> with<span class='highlighted'>string</span> object."],"Component":null,"Html":null,"Model":"voterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'> conditionalExpression </span> with <span class='highlighted'>Function</span> object."],"Component":null,"Html":null,"Model":"memberAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-message-validator',\r\n    templateUrl: './greater-than-message.component.html'\r\n})\r\nexport class GreaterThanMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tage:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvoterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\totherAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,message:'Please enter number greater than 0.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n    <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Voter Age</label>\r\n    <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Age</label>\r\n    <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"otherAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,message:'Please enter number greater than 0.' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-dynamic-validator',\r\n    templateUrl: './greater-than-dynamic.component.html'\r\n})\r\nexport class GreaterThanDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tmemberAge : {\r\n\t\t\t\tgreaterThan :  {fieldName:'age',conditionalExpression:(x,y) => x.age > 17 ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tvoterAge : {\r\n\t\t\t\tgreaterThan :  {fieldName:'age',conditionalExpression:'x => x.age > 17',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\totherAge : {\r\n\t\t\t\tgreaterThan :  {fieldName:'age',message:'Please enter number greater than 0.',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\tage:'', memberAge:'', voterAge:'', otherAge:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n    <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Member Age</label>\r\n    <input type=\"text\" formControlName=\"memberAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.memberAge.errors\">{{userFormGroup.controls.memberAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Voter Age</label>\r\n    <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Age</label>\r\n    <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-add-validator',\r\n    templateUrl: './greater-than-add.component.html'\r\n})\r\nexport class GreaterThanAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tage:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvoterAge:['', RxwebValidators.greaterThan({fieldName:'age' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n    <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Voter Age</label>\r\n    <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">This is checking greater than validation for  Voter Age must be greater than to age.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}