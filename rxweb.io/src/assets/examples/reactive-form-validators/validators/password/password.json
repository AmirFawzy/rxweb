{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-complete-validator',\r\n    templateUrl: './password-complete.component.html'\r\n})\r\nexport class PasswordCompleteValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loginInfoFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tnewPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\toldPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>New Password</label>\r\n\t\t<input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Old Password</label>\r\n\t\t<input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"validation":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-validation-validator',\r\n    templateUrl: './password-validation.component.html'\r\n})\r\nexport class PasswordValidationValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loginInfoFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tnewPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>New Password</label>\r\n\t\t<input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"validationExample":{"Notes":[],"Component":"","Html":"","Model":"newPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-message-validator',\r\n    templateUrl: './password-message.component.html'\r\n})\r\nexport class PasswordMessageValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loginInfoFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\toldPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Old Password</label>\r\n\t\t<input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"oldPassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-dynamic-validator',\r\n    templateUrl: './password-dynamic.component.html'\r\n})\r\nexport class PasswordDynamicValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tnewPassword : {\r\n\t\t\t\tpassword :  {validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true},} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\toldPassword : {\r\n\t\t\t\tpassword :  {validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true},message:'Password is not valid',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var loginInfo = {\r\n\t\t\tnewPassword:'', oldPassword:'', \r\n\t\t}\r\n\t\tthis.loginInfoFormGroup = this.formBuilder.group(loginInfo,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>New Password</label>\r\n\t\t<input type=\"text\" formControlName=\"newPassword\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.newPassword.errors\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Old Password</label>\r\n\t\t<input type=\"text\" formControlName=\"oldPassword\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.oldPassword.errors\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-password-add-validator',\r\n    templateUrl: './password-add.component.html'\r\n})\r\nexport class PasswordAddValidatorComponent implements OnInit {\r\n    loginInfoFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loginInfoFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tpassword:['', RxwebValidators.password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"loginInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Password</label>\r\n\t\t<input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-danger\" *ngIf=\"loginInfoFormGroup.controls.password.errors\">{{loginInfoFormGroup.controls.password.errors.password.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!loginInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}