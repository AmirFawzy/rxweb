{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-complete-validator',\r\n    templateUrl: './upper-case-complete.component.html'\r\n})\r\nexport class UpperCaseCompleteValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tcountryName:['', RxwebValidators.upperCase()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstateName:['', RxwebValidators.upperCase({conditionalExpression:(x,y) => x.countryName == \"INDIA\"  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcityName:['', RxwebValidators.upperCase({conditionalExpression:'x => x.countryName == \"INDIA\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolonyName:['', RxwebValidators.upperCase({message:'You can enter only upperCase letters.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n\t\t<input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' or 'City Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>State Name</label>\r\n\t\t<input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of upperCase on 'State Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.stateName.errors\">{{locationFormGroup.controls.stateName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>City Name</label>\r\n\t\t<input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.cityName.errors\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Colony Name</label>\r\n\t\t<input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-conditionalExpression-validator',\r\n    templateUrl: './upper-case-conditional-expression.component.html'\r\n})\r\nexport class UpperCaseConditionalExpressionValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tcountryName:['', RxwebValidators.upperCase()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcityName:['', RxwebValidators.upperCase({conditionalExpression:'x => x.countryName == \"INDIA\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstateName:['', RxwebValidators.upperCase({conditionalExpression:(x,y) => x.countryName == \"INDIA\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n\t\t<input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' or 'City Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>City Name</label>\r\n\t\t<input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.cityName.errors\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>State Name</label>\r\n\t\t<input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of upperCase on 'State Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.stateName.errors\">{{locationFormGroup.controls.stateName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"cityName:['', RxwebValidators.upperCase({conditionalExpression:'x => x.countryName == \"INDIA\"' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"stateName:['', RxwebValidators.upperCase({conditionalExpression:(x,y) => x.countryName == \"INDIA\"  })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-message-validator',\r\n    templateUrl: './upper-case-message.component.html'\r\n})\r\nexport class UpperCaseMessageValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tcolonyName:['', RxwebValidators.upperCase({message:'You can enter only upperCase letters.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Colony Name</label>\r\n\t\t<input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"colonyName:['', RxwebValidators.upperCase({message:'You can enter only upperCase letters.' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-dynamic-validator',\r\n    templateUrl: './upper-case-dynamic.component.html'\r\n})\r\nexport class UpperCaseDynamicValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tcountryName : {\r\n\t\t\t\tupperCase : true  \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tstateName : {\r\n\t\t\t\tupperCase :  {conditionalExpression:(x,y) => x.countryName == \"INDIA\" ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tcityName : {\r\n\t\t\t\tupperCase :  {conditionalExpression:'x => x.countryName == \"INDIA\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tcolonyName : {\r\n\t\t\t\tupperCase :  {message:'You can enter only upperCase letters.',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var location = {\r\n\t\t\tcountryName:'', stateName:'', cityName:'', colonyName:'', \r\n\t\t}\r\n\t\tthis.locationFormGroup = this.formBuilder.group(location,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n\t\t<input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' or 'City Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>State Name</label>\r\n\t\t<input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of upperCase on 'State Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.stateName.errors\">{{locationFormGroup.controls.stateName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>City Name</label>\r\n\t\t<input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.cityName.errors\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Colony Name</label>\r\n\t\t<input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-add-validator',\r\n    templateUrl: './upper-case-add.component.html'\r\n})\r\nexport class UpperCaseAddValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tcountryName:['', RxwebValidators.upperCase()], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n\t\t<input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}