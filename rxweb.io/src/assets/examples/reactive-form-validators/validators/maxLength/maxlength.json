{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-complete-validator',\r\n    templateUrl: './max-length-complete.component.html'\r\n})\r\nexport class MaxLengthCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tfirstName:['', RxwebValidators.maxLength({value:16 })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmiddleName:['', RxwebValidators.maxLength({value:16  ,conditionalExpression:(x,y)=> x.firstName == \"John\" })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlastName:['', RxwebValidators.maxLength({value:16  ,conditionalExpression:'x=> x.firstName == \"John\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserName:['', RxwebValidators.maxLength({value:10  ,message:'Maximum 10 characters are allowed' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>First Name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Middle Name</label>\r\n    <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply validation here, write 'John' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Last Name</label>\r\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Last Name' field, write 'John' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"value":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-value-validator',\r\n    templateUrl: './max-length-value.component.html'\r\n})\r\nexport class MaxLengthValueValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tfirstName:['', RxwebValidators.maxLength({value:16 })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>First Name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"valueExample":{"Notes":[],"Component":"","Html":"","Model":"firstName:['', RxwebValidators.maxLength({value:16 })], "},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-conditionalExpression-validator',\r\n    templateUrl: './max-length-conditional-expression.component.html'\r\n})\r\nexport class MaxLengthConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tfirstName:['', RxwebValidators.maxLength({value:16 })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlastName:['', RxwebValidators.maxLength({value:16  ,conditionalExpression:'x=> x.firstName == \"John\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmiddleName:['', RxwebValidators.maxLength({value:16  ,conditionalExpression:(x,y)=> x.firstName == \"John\" })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>First Name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Last Name</label>\r\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Last Name' field, write 'John' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Middle Name</label>\r\n    <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply validation here, write 'John' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'> conditionalExpression </span> with <span class='highlighted'>Function</span> object."],"Component":null,"Html":null,"Model":"middleName:['', RxwebValidators.maxLength({value:16  ,conditionalExpression:(x,y)=> x.firstName == \"John\" })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-message-validator',\r\n    templateUrl: './max-length-message.component.html'\r\n})\r\nexport class MaxLengthMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tuserName:['', RxwebValidators.maxLength({value:10  ,message:'Maximum 10 characters are allowed' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"userName:['', RxwebValidators.maxLength({value:10  ,message:'Maximum 10 characters are allowed' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-dynamic-validator',\r\n    templateUrl: './max-length-dynamic.component.html'\r\n})\r\nexport class MaxLengthDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tfirstName : {\r\n\t\t\t\tmaxLength :  {value:16,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tmiddleName : {\r\n\t\t\t\tmaxLength :  {value:16,conditionalExpression:(x,y)=> x.firstName == \"John\",} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tlastName : {\r\n\t\t\t\tmaxLength :  {value:16,conditionalExpression:'x=> x.firstName == \"John\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tuserName : {\r\n\t\t\t\tmaxLength :  {value:10,message:'Maximum 10 characters are allowed',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\tfirstName:'', middleName:'', lastName:'', userName:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>First Name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Middle Name</label>\r\n    <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply validation here, write 'John' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Last Name</label>\r\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Last Name' field, write 'John' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-add-validator',\r\n    templateUrl: './max-length-add.component.html'\r\n})\r\nexport class MaxLengthAddValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tfirstName:['', RxwebValidators.maxLength({value:10 })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>First Name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Maximum Length Upto 10 characters<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.firstName.errors\">{{locationFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}