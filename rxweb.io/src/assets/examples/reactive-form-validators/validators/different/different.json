{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-different-complete-validator',\r\n    templateUrl: './different-complete.component.html'\r\n})\r\nexport class DifferentCompleteValidatorComponent implements OnInit {\r\n    accountInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.accountInfoFormGroup = this.formBuilder.group({\r\n            firstName:['',], \r\n            password:['', RxwebValidators.different({fieldName:\"firstName\"  ,message:'{{0}} is same as firstName' })], \r\n            lastName:['', RxwebValidators.different({fieldName:\"firstName\"  ,conditionalExpression:(x,y) => x.firstName == \"Bharat\"  })], \r\n            userName:['', RxwebValidators.different({fieldName:\"firstName\"  ,conditionalExpression:'x => x.firstName == \"Bharat\"' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"accountInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Last Name' or 'Username', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.firstName.errors\">{{accountInfoFormGroup.controls.firstName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Password and firstName must be different<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.password.errors\">{{accountInfoFormGroup.controls.password.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Username' then you need to add 'First Name' input as 'Bharat'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.lastName.errors\">{{accountInfoFormGroup.controls.lastName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Username' then you need to add 'First Name' input as 'Bharat'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.userName.errors\">{{accountInfoFormGroup.controls.userName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!accountInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null},"fieldName":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-different-fieldName-validator',\r\n    templateUrl: './different-field-name.component.html'\r\n})\r\nexport class DifferentFieldNameValidatorComponent implements OnInit {\r\n    accountInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.accountInfoFormGroup = this.formBuilder.group({\r\n            firstName:['',], \r\n            userName:['', RxwebValidators.different({fieldName:\"firstName\"  ,conditionalExpression:'x => x.firstName == \"Bharat\"' })], \r\n            password:['', RxwebValidators.different({fieldName:\"firstName\"  ,message:'{{0}} is same as firstName' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"accountInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Last Name' or 'Username', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.firstName.errors\">{{accountInfoFormGroup.controls.firstName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Username' then you need to add 'First Name' input as 'Bharat'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.userName.errors\">{{accountInfoFormGroup.controls.userName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Password and firstName must be different<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.password.errors\">{{accountInfoFormGroup.controls.password.errors.different.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!accountInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null},"fieldNameExample":{"Notes":[],"Component":"","Html":"","Model":"            userName:['', RxwebValidators.different({fieldName:\"firstName\"  ,conditionalExpression:'x => x.firstName == \"Bharat\"' })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-different-message-validator',\r\n    templateUrl: './different-message.component.html'\r\n})\r\nexport class DifferentMessageValidatorComponent implements OnInit {\r\n    accountInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.accountInfoFormGroup = this.formBuilder.group({\r\n            firstName:['',], \r\n            userName:['', RxwebValidators.different({fieldName:\"firstName\"  ,conditionalExpression:'x => x.firstName == \"Bharat\"' })], \r\n            password:['', RxwebValidators.different({fieldName:\"firstName\"  ,message:'{{0}} is same as firstName' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"accountInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Last Name' or 'Username', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.firstName.errors\">{{accountInfoFormGroup.controls.firstName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Username' then you need to add 'First Name' input as 'Bharat'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.userName.errors\">{{accountInfoFormGroup.controls.userName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Password and firstName must be different<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.password.errors\">{{accountInfoFormGroup.controls.password.errors.different.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!accountInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"            password:['', RxwebValidators.different({fieldName:\"firstName\"  ,message:'{{0}} is same as firstName' })], "},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-different-conditionalExpression-validator',\r\n    templateUrl: './different-conditional-expression.component.html'\r\n})\r\nexport class DifferentConditionalExpressionValidatorComponent implements OnInit {\r\n    accountInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.accountInfoFormGroup = this.formBuilder.group({\r\n            firstName:['',], \r\n            userName:['', RxwebValidators.different({fieldName:\"firstName\"  ,conditionalExpression:'x => x.firstName == \"Bharat\"' })], \r\n            lastName:['', RxwebValidators.different({fieldName:\"firstName\"  ,conditionalExpression:(x,y) => x.firstName == \"Bharat\"  })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"accountInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Last Name' or 'Username', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.firstName.errors\">{{accountInfoFormGroup.controls.firstName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Username' then you need to add 'First Name' input as 'Bharat'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.userName.errors\">{{accountInfoFormGroup.controls.userName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Username' then you need to add 'First Name' input as 'Bharat'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.lastName.errors\">{{accountInfoFormGroup.controls.lastName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!accountInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"            userName:['', RxwebValidators.different({fieldName:\"firstName\"  ,conditionalExpression:'x => x.firstName == \"Bharat\"' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"            lastName:['', RxwebValidators.different({fieldName:\"firstName\"  ,conditionalExpression:(x,y) => x.firstName == \"Bharat\"  })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-different-dynamic-validator',\r\n    templateUrl: './different-dynamic.component.html'\r\n})\r\nexport class DifferentDynamicValidatorComponent implements OnInit {\r\n    accountInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tpassword : {\r\n\t\t\t\tdifferent : {fieldName:\"firstName\",message:'{{0}} is same as firstName',} \r\n\t\t\t},\t\t\t\r\n\t\t\tuserName : {\r\n\t\t\t\tdifferent : {fieldName:\"firstName\",conditionalExpression:'x => x.firstName == \"Bharat\"',} \r\n\t\t\t},\r\n\t\t};\r\n\t\tvar accountInfo = { firstName:'', password:'', lastName:'', userName:'',  }\r\n\t\tthis.accountInfoFormGroup = this.formBuilder.group(accountInfo,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"accountInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Last Name' or 'Username', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.firstName.errors\">{{accountInfoFormGroup.controls.firstName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Password and firstName must be different<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.password.errors\">{{accountInfoFormGroup.controls.password.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Username</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Username' then you need to add 'First Name' input as 'Bharat'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.userName.errors\">{{accountInfoFormGroup.controls.userName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!accountInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-different-add-validator',\r\n    templateUrl: './different-add.component.html'\r\n})\r\nexport class DifferentAddValidatorComponent implements OnInit {\r\n    accountInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.accountInfoFormGroup = this.formBuilder.group({\r\n            firstName:['',], \r\n            lastName:['', RxwebValidators.different({fieldName:\"firstName\" })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"accountInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.firstName.errors\">{{accountInfoFormGroup.controls.firstName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Both field must be different<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"accountInfoFormGroup.controls.lastName.errors\">{{accountInfoFormGroup.controls.lastName.errors.different.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!accountInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null}}