{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-compare-complete-validator',\r\n    templateUrl: './compare-complete.component.html'\r\n})\r\nexport class CompareCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            password:['',], \r\n            confirmPassword:['', RxwebValidators.compare({fieldName:'password'  ,message:'Both Input is not matched' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null},"fieldName":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-compare-fieldName-validator',\r\n    templateUrl: './compare-field-name.component.html'\r\n})\r\nexport class CompareFieldNameValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            password:['',], \r\n            confirmPassword:['', RxwebValidators.compare({fieldName:'password'  ,message:'Both Input is not matched' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null},"fieldNameExample":{"Notes":[],"Component":"","Html":"","Model":"            confirmPassword:['', RxwebValidators.compare({fieldName:'password'  ,message:'Both Input is not matched' })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-compare-message-validator',\r\n    templateUrl: './compare-message.component.html'\r\n})\r\nexport class CompareMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            password:['',], \r\n            confirmPassword:['', RxwebValidators.compare({fieldName:'password'  ,message:'Both Input is not matched' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"            confirmPassword:['', RxwebValidators.compare({fieldName:'password'  ,message:'Both Input is not matched' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-compare-dynamic-validator',\r\n    templateUrl: './compare-dynamic.component.html'\r\n})\r\nexport class CompareDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tconfirmPassword : {\r\n\t\t\t\tcompare : {fieldName:'password',message:'Both Input is not matched',} \r\n\t\t\t},\r\n\t\t};\r\n\t\tvar user = { password:'', confirmPassword:'',  }\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-compare-add-validator',\r\n    templateUrl: './compare-add.component.html'\r\n})\r\nexport class CompareAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            password:['',], \r\n            confirmPassword:['', RxwebValidators.compare({fieldName:'password' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>New Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.confirmPassword.errors\">{{userFormGroup.controls.confirmPassword.errors.compare.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null}}