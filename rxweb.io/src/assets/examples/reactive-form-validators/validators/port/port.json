{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-complete-validator',\r\n    templateUrl: './port-complete.component.html'\r\n})\r\nexport class PortCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tbrowser:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tentertainmentWebsitePort:['', RxwebValidators.port({conditionalExpression:(x,y) => x.browser == \"Chrome\"  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshoppingWebsitePort:['', RxwebValidators.port({conditionalExpression:'x => x.browser ==\"Chrome\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\teducationalWebsitePort:['', RxwebValidators.port({message:'{{0}} is not a proper port number' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Browser</label>\r\n    <input type=\"text\" formControlName=\"browser\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.browser.errors\">{{userFormGroup.controls.browser.errors.port.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Entertainment Website Port</label>\r\n    <input type=\"text\" formControlName=\"entertainmentWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.entertainmentWebsitePort.errors\">{{userFormGroup.controls.entertainmentWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Shopping Website Port</label>\r\n    <input type=\"text\" formControlName=\"shoppingWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.shoppingWebsitePort.errors\">{{userFormGroup.controls.shoppingWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Educational Website Port</label>\r\n    <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-conditionalExpression-validator',\r\n    templateUrl: './port-conditional-expression.component.html'\r\n})\r\nexport class PortConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tbrowser:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshoppingWebsitePort:['', RxwebValidators.port({conditionalExpression:'x => x.browser ==\"Chrome\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tentertainmentWebsitePort:['', RxwebValidators.port({conditionalExpression:(x,y) => x.browser == \"Chrome\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Browser</label>\r\n    <input type=\"text\" formControlName=\"browser\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.browser.errors\">{{userFormGroup.controls.browser.errors.port.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Shopping Website Port</label>\r\n    <input type=\"text\" formControlName=\"shoppingWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.shoppingWebsitePort.errors\">{{userFormGroup.controls.shoppingWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Entertainment Website Port</label>\r\n    <input type=\"text\" formControlName=\"entertainmentWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.entertainmentWebsitePort.errors\">{{userFormGroup.controls.entertainmentWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"shoppingWebsitePort:['', RxwebValidators.port({conditionalExpression:'x => x.browser ==\"Chrome\"' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"entertainmentWebsitePort:['', RxwebValidators.port({conditionalExpression:(x,y) => x.browser == \"Chrome\"  })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-message-validator',\r\n    templateUrl: './port-message.component.html'\r\n})\r\nexport class PortMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\teducationalWebsitePort:['', RxwebValidators.port({message:'{{0}} is not a proper port number' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Educational Website Port</label>\r\n    <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"educationalWebsitePort:['', RxwebValidators.port({message:'{{0}} is not a proper port number' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-dynamic-validator',\r\n    templateUrl: './port-dynamic.component.html'\r\n})\r\nexport class PortDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tentertainmentWebsitePort : {\r\n\t\t\t\tport :  {conditionalExpression:(x,y) => x.browser == \"Chrome\" ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tshoppingWebsitePort : {\r\n\t\t\t\tport :  {conditionalExpression:'x => x.browser ==\"Chrome\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\teducationalWebsitePort : {\r\n\t\t\t\tport :  {message:'{{0}} is not a proper port number',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\tbrowser:'', entertainmentWebsitePort:'', shoppingWebsitePort:'', educationalWebsitePort:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Browser</label>\r\n    <input type=\"text\" formControlName=\"browser\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.browser.errors\">{{userFormGroup.controls.browser.errors.port.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Entertainment Website Port</label>\r\n    <input type=\"text\" formControlName=\"entertainmentWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.entertainmentWebsitePort.errors\">{{userFormGroup.controls.entertainmentWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Shopping Website Port</label>\r\n    <input type=\"text\" formControlName=\"shoppingWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.shoppingWebsitePort.errors\">{{userFormGroup.controls.shoppingWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Educational Website Port</label>\r\n    <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-port-add-validator',\r\n    templateUrl: './port-add.component.html'\r\n})\r\nexport class PortAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\teducationalWebsitePort:['', RxwebValidators.port()], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Educational Website Port</label>\r\n    <input type=\"text\" formControlName=\"educationalWebsitePort\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">You must enter a proper port number<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.educationalWebsitePort.errors\">{{userFormGroup.controls.educationalWebsitePort.errors.port.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}