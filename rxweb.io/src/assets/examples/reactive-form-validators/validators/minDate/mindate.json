{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minDate-complete-validator',\r\n    templateUrl: './min-date-complete.component.html'\r\n})\r\nexport class MinDateCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tuserName:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbirthDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,conditionalExpression:(x,y) => x.userName == \"John\"  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tadmissionDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,conditionalExpression:'x => x.userName == \"John\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tregistrationDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,message:'{{0}} exceeds the Minimum Date Limit' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Date</label>\r\n    <input type=\"text\" formControlName=\"birthDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Birth date' field, then enter the value 'John' in 'User Name' textbox and you can enter minDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthDate.errors\">{{userFormGroup.controls.birthDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Date</label>\r\n    <input type=\"text\" formControlName=\"admissionDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Admission Date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionDate.errors\">{{userFormGroup.controls.admissionDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Registration Date</label>\r\n    <input type=\"text\" formControlName=\"registrationDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter MinDate upto 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.registrationDate.errors\">{{userFormGroup.controls.registrationDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"value":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minDate-value-validator',\r\n    templateUrl: './min-date-value.component.html'\r\n})\r\nexport class MinDateValueValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tuserName:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tadmissionDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,conditionalExpression:'x => x.userName == \"John\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbirthDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,conditionalExpression:(x,y) => x.userName == \"John\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Date</label>\r\n    <input type=\"text\" formControlName=\"admissionDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Admission Date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionDate.errors\">{{userFormGroup.controls.admissionDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Date</label>\r\n    <input type=\"text\" formControlName=\"birthDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Birth date' field, then enter the value 'John' in 'User Name' textbox and you can enter minDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthDate.errors\">{{userFormGroup.controls.birthDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"valueExample":{"Notes":[],"Component":"","Html":"","Model":"admissionDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,conditionalExpression:'x => x.userName == \"John\"' })], "},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minDate-conditionalExpression-validator',\r\n    templateUrl: './min-date-conditional-expression.component.html'\r\n})\r\nexport class MinDateConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tuserName:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tadmissionDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,conditionalExpression:'x => x.userName == \"John\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbirthDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,conditionalExpression:(x,y) => x.userName == \"John\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Date</label>\r\n    <input type=\"text\" formControlName=\"admissionDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Admission Date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionDate.errors\">{{userFormGroup.controls.admissionDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Date</label>\r\n    <input type=\"text\" formControlName=\"birthDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Birth date' field, then enter the value 'John' in 'User Name' textbox and you can enter minDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthDate.errors\">{{userFormGroup.controls.birthDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding < span class='highlighted'>conditionalExpression</span> with<span class='highlighted'>string</span> object."],"Component":null,"Html":null,"Model":"admissionDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,conditionalExpression:'x => x.userName == \"John\"' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'> conditionalExpression </span> with <span class='highlighted'>Function</span> object."],"Component":null,"Html":null,"Model":"birthDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,conditionalExpression:(x,y) => x.userName == \"John\"  })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minDate-message-validator',\r\n    templateUrl: './min-date-message.component.html'\r\n})\r\nexport class MinDateMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tregistrationDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,message:'{{0}} exceeds the Minimum Date Limit' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Registration Date</label>\r\n    <input type=\"text\" formControlName=\"registrationDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter MinDate upto 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.registrationDate.errors\">{{userFormGroup.controls.registrationDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"registrationDate:['', RxwebValidators.minDate({value:new Date(2018,7,30)  ,message:'{{0}} exceeds the Minimum Date Limit' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minDate-dynamic-validator',\r\n    templateUrl: './min-date-dynamic.component.html'\r\n})\r\nexport class MinDateDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tbirthDate : {\r\n\t\t\t\tminDate :  {value:new Date(2018,7,30),conditionalExpression:(x,y) => x.userName == \"John\" ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tadmissionDate : {\r\n\t\t\t\tminDate :  {value:new Date(2018,7,30),conditionalExpression:'x => x.userName == \"John\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tregistrationDate : {\r\n\t\t\t\tminDate :  {value:new Date(2018,7,30),message:'{{0}} exceeds the Minimum Date Limit',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\tuserName:'', birthDate:'', admissionDate:'', registrationDate:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>User Name</label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.userName.errors\">{{userFormGroup.controls.userName.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Date</label>\r\n    <input type=\"text\" formControlName=\"birthDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Birth date' field, then enter the value 'John' in 'User Name' textbox and you can enter minDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthDate.errors\">{{userFormGroup.controls.birthDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Date</label>\r\n    <input type=\"text\" formControlName=\"admissionDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Admission Date' field, then enter the value 'John' in 'User Name' textbox and you can enter maxDate as 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionDate.errors\">{{userFormGroup.controls.admissionDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Registration Date</label>\r\n    <input type=\"text\" formControlName=\"registrationDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter MinDate upto 30th july 2018<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.registrationDate.errors\">{{userFormGroup.controls.registrationDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minDate-add-validator',\r\n    templateUrl: './min-date-add.component.html'\r\n})\r\nexport class MinDateAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tregistrationDate:['', RxwebValidators.minDate({value:new Date(2018,7,30) })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Registration Date</label>\r\n    <input type=\"text\" formControlName=\"registrationDate\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter Min Date upto 30th july 2018<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.registrationDate.errors\">{{userFormGroup.controls.registrationDate.errors.minDate.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}