{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-complete-validator',\r\n    templateUrl: './file-size-complete.component.html'\r\n})\r\nexport class FileSizeCompleteValidatorComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.storageCapacityFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tdevice:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocumentStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,conditionalExpression:(x,y) => x.device == \"SmartPhone\"  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tphotographStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvideoStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,message:'{{0}} is not a valid size' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"storageCapacityFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Device</label>\r\n    <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.device.errors\">{{storageCapacityFormGroup.controls.device.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Document Storage Size</label>\r\n    <input type=\"text\" formControlName=\"documentStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.documentStorageSize.errors\">{{storageCapacityFormGroup.controls.documentStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Photograph Storage Size</label>\r\n    <input type=\"text\" formControlName=\"photographStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.photographStorageSize.errors\">{{storageCapacityFormGroup.controls.photographStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Video Storage Size</label>\r\n    <input type=\"text\" formControlName=\"videoStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter upto 50<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.videoStorageSize.errors\">{{storageCapacityFormGroup.controls.videoStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"maxSize":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-maxSize-validator',\r\n    templateUrl: './file-size-max-size.component.html'\r\n})\r\nexport class FileSizeMaxSizeValidatorComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.storageCapacityFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tdevice:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tphotographStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocumentStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,conditionalExpression:(x,y) => x.device == \"SmartPhone\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"storageCapacityFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Device</label>\r\n    <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.device.errors\">{{storageCapacityFormGroup.controls.device.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Photograph Storage Size</label>\r\n    <input type=\"text\" formControlName=\"photographStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.photographStorageSize.errors\">{{storageCapacityFormGroup.controls.photographStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Document Storage Size</label>\r\n    <input type=\"text\" formControlName=\"documentStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.documentStorageSize.errors\">{{storageCapacityFormGroup.controls.documentStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"maxSizeExample":{"Notes":[],"Component":"","Html":"","Model":"photographStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' })], "},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-conditionalExpression-validator',\r\n    templateUrl: './file-size-conditional-expression.component.html'\r\n})\r\nexport class FileSizeConditionalExpressionValidatorComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.storageCapacityFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tdevice:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tphotographStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocumentStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,conditionalExpression:(x,y) => x.device == \"SmartPhone\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"storageCapacityFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Device</label>\r\n    <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.device.errors\">{{storageCapacityFormGroup.controls.device.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Photograph Storage Size</label>\r\n    <input type=\"text\" formControlName=\"photographStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.photographStorageSize.errors\">{{storageCapacityFormGroup.controls.photographStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Document Storage Size</label>\r\n    <input type=\"text\" formControlName=\"documentStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.documentStorageSize.errors\">{{storageCapacityFormGroup.controls.documentStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"photographStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"documentStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,conditionalExpression:(x,y) => x.device == \"SmartPhone\"  })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-message-validator',\r\n    templateUrl: './file-size-message.component.html'\r\n})\r\nexport class FileSizeMessageValidatorComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.storageCapacityFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tvideoStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,message:'{{0}} is not a valid size' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"storageCapacityFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Video Storage Size</label>\r\n    <input type=\"text\" formControlName=\"videoStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter upto 50<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.videoStorageSize.errors\">{{storageCapacityFormGroup.controls.videoStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"videoStorageSize:['', RxwebValidators.fileSize({maxSize:50  ,message:'{{0}} is not a valid size' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-dynamic-validator',\r\n    templateUrl: './file-size-dynamic.component.html'\r\n})\r\nexport class FileSizeDynamicValidatorComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tdocumentStorageSize : {\r\n\t\t\t\tfileSize :  {maxSize:50,conditionalExpression:(x,y) => x.device == \"SmartPhone\" ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tphotographStorageSize : {\r\n\t\t\t\tfileSize :  {maxSize:50,conditionalExpression:'x => x.device ==\"SmartPhone\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tvideoStorageSize : {\r\n\t\t\t\tfileSize :  {maxSize:50,message:'{{0}} is not a valid size',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var storageCapacity = {\r\n\t\t\tdevice:'', documentStorageSize:'', photographStorageSize:'', videoStorageSize:'', \r\n\t\t}\r\n\t\tthis.storageCapacityFormGroup = this.formBuilder.group(storageCapacity,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"storageCapacityFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Device</label>\r\n    <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.device.errors\">{{storageCapacityFormGroup.controls.device.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Document Storage Size</label>\r\n    <input type=\"text\" formControlName=\"documentStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.documentStorageSize.errors\">{{storageCapacityFormGroup.controls.documentStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Photograph Storage Size</label>\r\n    <input type=\"text\" formControlName=\"photographStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.photographStorageSize.errors\">{{storageCapacityFormGroup.controls.photographStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Video Storage Size</label>\r\n    <input type=\"text\" formControlName=\"videoStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter upto 50<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.videoStorageSize.errors\">{{storageCapacityFormGroup.controls.videoStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-add-validator',\r\n    templateUrl: './file-size-add.component.html'\r\n})\r\nexport class FileSizeAddValidatorComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.storageCapacityFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tvideoStorageSize:['', RxwebValidators.fileSize({maxSize:50 })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"storageCapacityFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Video Storage Size</label>\r\n    <input type=\"text\" formControlName=\"videoStorageSize\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">You must enter a valid size<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.videoStorageSize.errors\">{{storageCapacityFormGroup.controls.videoStorageSize.errors.fileSize.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}