{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-complete-validator',\r\n    templateUrl: './lower-case-complete.component.html'\r\n})\r\nexport class LowerCaseCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tusername:['', RxwebValidators.lowerCase()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfirstName:['', RxwebValidators.lowerCase({conditionalExpression:(x, y) =>  x.username == \"jonathan.feldman\"  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmiddleName:['', RxwebValidators.lowerCase({conditionalExpression:'x => x.username == \"jonathan.feldman\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlastName:['', RxwebValidators.lowerCase({message:'You can enter only lowerCase letters.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Username</label>\r\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'First name' or 'Middle Name', then you need to add 'username' input as 'jonathan.feldman'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.username.errors\">{{userFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>First name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'First Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Middle name</label>\r\n    <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Middle Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Last name</label>\r\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-conditionalExpression-validator',\r\n    templateUrl: './lower-case-conditional-expression.component.html'\r\n})\r\nexport class LowerCaseConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tusername:['', RxwebValidators.lowerCase()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmiddleName:['', RxwebValidators.lowerCase({conditionalExpression:'x => x.username == \"jonathan.feldman\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfirstName:['', RxwebValidators.lowerCase({conditionalExpression:(x, y) =>  x.username == \"jonathan.feldman\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Username</label>\r\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'First name' or 'Middle Name', then you need to add 'username' input as 'jonathan.feldman'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.username.errors\">{{userFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Middle name</label>\r\n    <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Middle Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>First name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'First Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding < span class='highlighted'>conditionalExpression</span> with<span class='highlighted'>string</span> object."],"Component":"","Html":"","Model":"middleName:['', RxwebValidators.lowerCase({conditionalExpression:'x => x.username == \"jonathan.feldman\"' })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-message-validator',\r\n    templateUrl: './lower-case-message.component.html'\r\n})\r\nexport class LowerCaseMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tlastName:['', RxwebValidators.lowerCase({message:'You can enter only lowerCase letters.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Last name</label>\r\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"lastName:['', RxwebValidators.lowerCase({message:'You can enter only lowerCase letters.' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-dynamic-validator',\r\n    templateUrl: './lower-case-dynamic.component.html'\r\n})\r\nexport class LowerCaseDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tusername : {\r\n\t\t\t\tlowerCase : true  \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tfirstName : {\r\n\t\t\t\tlowerCase :  {conditionalExpression:(x, y) =>  x.username == \"jonathan.feldman\" ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tmiddleName : {\r\n\t\t\t\tlowerCase :  {conditionalExpression:'x => x.username == \"jonathan.feldman\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tlastName : {\r\n\t\t\t\tlowerCase :  {message:'You can enter only lowerCase letters.',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\tusername:'', firstName:'', middleName:'', lastName:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Username</label>\r\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'First name' or 'Middle Name', then you need to add 'username' input as 'jonathan.feldman'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.username.errors\">{{userFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>First name</label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'First Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstName.errors\">{{userFormGroup.controls.firstName.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Middle name</label>\r\n    <input type=\"text\" formControlName=\"middleName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Middle Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.middleName.errors\">{{userFormGroup.controls.middleName.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Last name</label>\r\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.lastName.errors\">{{userFormGroup.controls.lastName.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lowerCase-add-validator',\r\n    templateUrl: './lower-case-add.component.html'\r\n})\r\nexport class LowerCaseAddValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tusername:['', RxwebValidators.lowerCase()], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Username</label>\r\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.username.errors\">{{userInfoFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}