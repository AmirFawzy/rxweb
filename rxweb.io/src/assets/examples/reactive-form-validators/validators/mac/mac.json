{"conditionalExpressionExampleFunction":"","conditionalExpressionExampleString":"","messageExample":"","complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-mac-complete-validator',\r\n    templateUrl: './mac-complete.component.html'\r\n})\r\nexport class MacCompleteValidatorComponent implements OnInit {\r\n    macAddressInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.macAddressInfoFormGroup = this.formBuilder.formGroup({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmacAddress:['',RxwebValidators.mac({conditionalExpression:(x,y) =>{ return  x.device == \"Laptop\" } })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlocalMacAddress:['',RxwebValidators.mac({conditionalExpression:x => x.device ==\"Laptop\" })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsystemMacAddress:['',RxwebValidators.mac({message:'{{0}} is not a MAC address' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"macAddressInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Device</label>\r\n    <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MAC Address' or 'Local MAC Address', then you need to add 'Device' input as 'Laptop'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.device.errors\">{{macAddressInfoFormGroup.controls.device.errors.mac.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>MAC Address</label>\r\n    <input type=\"text\" formControlName=\"macAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MAC Address' then you need to add 'Device' input as 'Laptop'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.macAddress.errors\">{{macAddressInfoFormGroup.controls.macAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Local MAC Address</label>\r\n    <input type=\"text\" formControlName=\"localMacAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Local MAC Address' then you need to add 'Device' input as 'Laptop'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.localMacAddress.errors\">{{macAddressInfoFormGroup.controls.localMacAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>System MAC Address</label>\r\n    <input type=\"text\" formControlName=\"systemMacAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">enter MAC address only<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.systemMacAddress.errors\">{{macAddressInfoFormGroup.controls.systemMacAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!macAddressInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpression":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-mac-conditionalExpression-validator',\r\n    templateUrl: './mac-conditional-expression.component.html'\r\n})\r\nexport class MacConditionalExpressionValidatorComponent implements OnInit {\r\n    macAddressInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.macAddressInfoFormGroup = this.formBuilder.formGroup({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlocalMacAddress:['',RxwebValidators.mac({conditionalExpression:x => x.device ==\"Laptop\" })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmacAddress:['',RxwebValidators.mac({conditionalExpression:(x,y) =>{ return  x.device == \"Laptop\" } })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"macAddressInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Device</label>\r\n    <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MAC Address' or 'Local MAC Address', then you need to add 'Device' input as 'Laptop'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.device.errors\">{{macAddressInfoFormGroup.controls.device.errors.mac.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Local MAC Address</label>\r\n    <input type=\"text\" formControlName=\"localMacAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Local MAC Address' then you need to add 'Device' input as 'Laptop'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.localMacAddress.errors\">{{macAddressInfoFormGroup.controls.localMacAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>MAC Address</label>\r\n    <input type=\"text\" formControlName=\"macAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MAC Address' then you need to add 'Device' input as 'Laptop'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.macAddress.errors\">{{macAddressInfoFormGroup.controls.macAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!macAddressInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-mac-message-validator',\r\n    templateUrl: './mac-message.component.html'\r\n})\r\nexport class MacMessageValidatorComponent implements OnInit {\r\n    macAddressInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.macAddressInfoFormGroup = this.formBuilder.formGroup({\r\n\t\t\t\t\t\t\t\t\t\tsystemMacAddress:['',RxwebValidators.mac({message:'{{0}} is not a MAC address' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"macAddressInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>System MAC Address</label>\r\n    <input type=\"text\" formControlName=\"systemMacAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">enter MAC address only<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.systemMacAddress.errors\">{{macAddressInfoFormGroup.controls.systemMacAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!macAddressInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-mac-dynamic-validator',\r\n    templateUrl: './mac-dynamic.component.html'\r\n})\r\nexport class MacDynamicValidatorComponent implements OnInit {\r\n    macAddressInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tmacAddress : {\r\n\t\t\t\tmac :  {conditionalExpression:(x,y) =>{ return  x.device == \"Laptop\" },} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tlocalMacAddress : {\r\n\t\t\t\tmac :  {conditionalExpression:x => x.device ==\"Laptop\",} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tsystemMacAddress : {\r\n\t\t\t\tmac :  {message:'{{0}} is not a MAC address',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var macAddressInfo = {\r\n\t\t\tmacAddress:'', localMacAddress:'', systemMacAddress:'', \r\n\t\t}\r\n\t\tthis.macAddressInfoFormGroup = this.formBuilder.formGroup(macAddressInfo,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"macAddressInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Device</label>\r\n    <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MAC Address' or 'Local MAC Address', then you need to add 'Device' input as 'Laptop'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.device.errors\">{{macAddressInfoFormGroup.controls.device.errors.mac.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>MAC Address</label>\r\n    <input type=\"text\" formControlName=\"macAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MAC Address' then you need to add 'Device' input as 'Laptop'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.macAddress.errors\">{{macAddressInfoFormGroup.controls.macAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Local MAC Address</label>\r\n    <input type=\"text\" formControlName=\"localMacAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Local MAC Address' then you need to add 'Device' input as 'Laptop'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.localMacAddress.errors\">{{macAddressInfoFormGroup.controls.localMacAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>System MAC Address</label>\r\n    <input type=\"text\" formControlName=\"systemMacAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">enter MAC address only<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.systemMacAddress.errors\">{{macAddressInfoFormGroup.controls.systemMacAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!macAddressInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-mac-add-validator',\r\n    templateUrl: './mac-add.component.html'\r\n})\r\nexport class MacAddValidatorComponent implements OnInit {\r\n    macAddressInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.macAddressInfoFormGroup = this.formBuilder.formGroup({\r\n\t\t\t\t\t\t\t\t\t\tsystemMacAddress:['',RxwebValidators.mac()], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"macAddressInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>System MAC Address</label>\r\n    <input type=\"text\" formControlName=\"systemMacAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">You must enter a MAC address<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"macAddressInfoFormGroup.controls.systemMacAddress.errors\">{{macAddressInfoFormGroup.controls.systemMacAddress.errors.mac.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!macAddressInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}