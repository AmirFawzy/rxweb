{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-complete-validator',\r\n    templateUrl: './leap-year-complete.component.html'\r\n})\r\nexport class LeapYearCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tname:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbirthYear:['', RxwebValidators.leapYear({conditionalExpression:(x,y) => x.name == \"John\"  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tadmissionYear:['', RxwebValidators.leapYear({conditionalExpression:'x => x.name == \"John\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tjoiningYear:['', RxwebValidators.leapYear({message:'{{0}} is not a leap year' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Name</label>\r\n\t\t<input type=\"text\" formControlName=\"name\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Year' or 'Admission Date', then you need to add 'Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.name.errors\">{{userFormGroup.controls.name.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Year</label>\r\n\t\t<input type=\"text\" formControlName=\"birthYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Leap Year on 'Birth Year' field, then enter the value 'John' in 'Name' textbox<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthYear.errors\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Year</label>\r\n\t\t<input type=\"text\" formControlName=\"admissionYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of leap on 'Admission Year' field, then enter the value 'John' in 'Name' textbox<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionYear.errors\">{{userFormGroup.controls.admissionYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Joining Year</label>\r\n\t\t<input type=\"text\" formControlName=\"joiningYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningYear.errors\">{{userFormGroup.controls.joiningYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-conditionalExpression-validator',\r\n    templateUrl: './leap-year-conditional-expression.component.html'\r\n})\r\nexport class LeapYearConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tname:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tadmissionYear:['', RxwebValidators.leapYear({conditionalExpression:'x => x.name == \"John\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbirthYear:['', RxwebValidators.leapYear({conditionalExpression:(x,y) => x.name == \"John\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Name</label>\r\n\t\t<input type=\"text\" formControlName=\"name\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Year' or 'Admission Date', then you need to add 'Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.name.errors\">{{userFormGroup.controls.name.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Year</label>\r\n\t\t<input type=\"text\" formControlName=\"admissionYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of leap on 'Admission Year' field, then enter the value 'John' in 'Name' textbox<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionYear.errors\">{{userFormGroup.controls.admissionYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Year</label>\r\n\t\t<input type=\"text\" formControlName=\"birthYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Leap Year on 'Birth Year' field, then enter the value 'John' in 'Name' textbox<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthYear.errors\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"admissionYear:['', RxwebValidators.leapYear({conditionalExpression:'x => x.name == \"John\"' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"birthYear:['', RxwebValidators.leapYear({conditionalExpression:(x,y) => x.name == \"John\"  })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-message-validator',\r\n    templateUrl: './leap-year-message.component.html'\r\n})\r\nexport class LeapYearMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tjoiningYear:['', RxwebValidators.leapYear({message:'{{0}} is not a leap year' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Joining Year</label>\r\n\t\t<input type=\"text\" formControlName=\"joiningYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningYear.errors\">{{userFormGroup.controls.joiningYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"joiningYear:['', RxwebValidators.leapYear({message:'{{0}} is not a leap year' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-dynamic-validator',\r\n    templateUrl: './leap-year-dynamic.component.html'\r\n})\r\nexport class LeapYearDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tbirthYear : {\r\n\t\t\t\tleapYear :  {conditionalExpression:(x,y) => x.name == \"John\" ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tadmissionYear : {\r\n\t\t\t\tleapYear :  {conditionalExpression:'x => x.name == \"John\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tjoiningYear : {\r\n\t\t\t\tleapYear :  {message:'{{0}} is not a leap year',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\tname:'', birthYear:'', admissionYear:'', joiningYear:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Name</label>\r\n\t\t<input type=\"text\" formControlName=\"name\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Year' or 'Admission Date', then you need to add 'Name' input as 'John'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.name.errors\">{{userFormGroup.controls.name.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Birth Year</label>\r\n\t\t<input type=\"text\" formControlName=\"birthYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of Leap Year on 'Birth Year' field, then enter the value 'John' in 'Name' textbox<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthYear.errors\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Admission Year</label>\r\n\t\t<input type=\"text\" formControlName=\"admissionYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">To apply the validation of leap on 'Admission Year' field, then enter the value 'John' in 'Name' textbox<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionYear.errors\">{{userFormGroup.controls.admissionYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Joining Year</label>\r\n\t\t<input type=\"text\" formControlName=\"joiningYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningYear.errors\">{{userFormGroup.controls.joiningYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-leapYear-add-validator',\r\n    templateUrl: './leap-year-add.component.html'\r\n})\r\nexport class LeapYearAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tbirthYear:['', RxwebValidators.leapYear()], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Birth Year</label>\r\n\t\t<input type=\"text\" formControlName=\"birthYear\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.birthYear.errors\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}