{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-digit-complete-validator',\r\n    templateUrl: './digit-complete.component.html'\r\n})\r\nexport class DigitCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tage:['', RxwebValidators.digit()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tphoneNumber:['', RxwebValidators.digit({conditionalExpression:(x,y) => x.age >= 25  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfaxNumber:['', RxwebValidators.digit({conditionalExpression:'x => x.age ==25' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmobileNumber:['', RxwebValidators.digit({message:'Please enter only digit.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n\t\t<input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Phone Number</label>\r\n\t\t<input type=\"text\" formControlName=\"phoneNumber\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n    <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.phoneNumber.errors\">{{userFormGroup.controls.phoneNumber.errors.digit.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Fax Number</label>\r\n\t\t<input type=\"text\" formControlName=\"faxNumber\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n    <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.faxNumber.errors\">{{userFormGroup.controls.faxNumber.errors.digit.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Mobile Number</label>\r\n\t\t<input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.mobileNumber.errors\">{{userFormGroup.controls.mobileNumber.errors.digit.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-digit-conditionalExpression-validator',\r\n    templateUrl: './digit-conditional-expression.component.html'\r\n})\r\nexport class DigitConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tage:['', RxwebValidators.digit()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfaxNumber:['', RxwebValidators.digit({conditionalExpression:'x => x.age ==25' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tphoneNumber:['', RxwebValidators.digit({conditionalExpression:(x,y) => x.age >= 25  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n\t\t<input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Fax Number</label>\r\n\t\t<input type=\"text\" formControlName=\"faxNumber\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n    <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.faxNumber.errors\">{{userFormGroup.controls.faxNumber.errors.digit.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Phone Number</label>\r\n\t\t<input type=\"text\" formControlName=\"phoneNumber\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n    <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.phoneNumber.errors\">{{userFormGroup.controls.phoneNumber.errors.digit.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"faxNumber:['', RxwebValidators.digit({conditionalExpression:'x => x.age ==25' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"phoneNumber:['', RxwebValidators.digit({conditionalExpression:(x,y) => x.age >= 25  })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-digit-message-validator',\r\n    templateUrl: './digit-message.component.html'\r\n})\r\nexport class DigitMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tmobileNumber:['', RxwebValidators.digit({message:'Please enter only digit.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Mobile Number</label>\r\n\t\t<input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.mobileNumber.errors\">{{userFormGroup.controls.mobileNumber.errors.digit.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"mobileNumber:['', RxwebValidators.digit({message:'Please enter only digit.' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-digit-dynamic-validator',\r\n    templateUrl: './digit-dynamic.component.html'\r\n})\r\nexport class DigitDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tage : {\r\n\t\t\t\tdigit : true  \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tphoneNumber : {\r\n\t\t\t\tdigit :  {conditionalExpression:(x,y) => x.age >= 25 ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tfaxNumber : {\r\n\t\t\t\tdigit :  {conditionalExpression:'x => x.age ==25',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tmobileNumber : {\r\n\t\t\t\tdigit :  {message:'Please enter only digit.',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\tage:'', phoneNumber:'', faxNumber:'', mobileNumber:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n\t\t<input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Phone Number</label>\r\n\t\t<input type=\"text\" formControlName=\"phoneNumber\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n    <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.phoneNumber.errors\">{{userFormGroup.controls.phoneNumber.errors.digit.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Fax Number</label>\r\n\t\t<input type=\"text\" formControlName=\"faxNumber\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n    <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.faxNumber.errors\">{{userFormGroup.controls.faxNumber.errors.digit.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Mobile Number</label>\r\n\t\t<input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.mobileNumber.errors\">{{userFormGroup.controls.mobileNumber.errors.digit.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-digit-add-validator',\r\n    templateUrl: './digit-add.component.html'\r\n})\r\nexport class DigitAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\t\t\r\n\t    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tage:['', RxwebValidators.digit()], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Age</label>\r\n\t\t<input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n\t    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}