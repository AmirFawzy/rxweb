{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\t,CreditCardType \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-complete-validator',\r\n    templateUrl: './credit-card-complete.component.html'\r\n})\r\nexport class CreditCardCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tcardType:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\totherVisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tamericanExpressCard:['', RxwebValidators.creditCard({creditCardTypes:[ CreditCardType.AmericanExpress ]  ,conditionalExpression:'x => x.cardType == \"AmericanExpress\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaestroCard:['', RxwebValidators.creditCard({creditCardTypes:[ CreditCardType.Maestro ]  ,conditionalExpression:'x => x.cardType == \"maestroCard\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tjcbCard:['', RxwebValidators.creditCard({creditCardTypes:[ CreditCardType.JCB ]  ,conditionalExpression:'x => x.cardType == \"jcbCard\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdiscoverCard:['', RxwebValidators.creditCard({creditCardTypes:[ CreditCardType.Discover ]  ,conditionalExpression:'x => x.cardType == \"discoverCard\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmasterCard:['', RxwebValidators.creditCard({creditCardTypes:[ CreditCardType.MasterCard ]  ,conditionalExpression:'x => x.cardType == \"masterCard\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdinersClubCard:['', RxwebValidators.creditCard({creditCardTypes:[ CreditCardType.DinersClub ]  ,conditionalExpression:'x => x.cardType == \"dinersClubCard\"' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>American Express</label>\r\n    <input type=\"text\" formControlName=\"americanExpressCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'American Express' then you need to add 'card type' input as 'AmericanExpress'.<br/></small>\r\n    <small class=\"form-text text-muted\">Message comes from Reactive Form Config<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.americanExpressCard.errors\">{{userFormGroup.controls.americanExpressCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Maestro Card</label>\r\n    <input type=\"text\" formControlName=\"maestroCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MaestroCard Card' then you need to add 'card type' input as 'maestro'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maestroCard.errors\">{{userFormGroup.controls.maestroCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>JCB Card</label>\r\n    <input type=\"text\" formControlName=\"jcbCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'JCB Card' then you need to add 'card type' input as 'jcb'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.jcbCard.errors\">{{userFormGroup.controls.jcbCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Discover Card</label>\r\n    <input type=\"text\" formControlName=\"discoverCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Discover Card' then you need to add 'card type' input as 'discover'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.discoverCard.errors\">{{userFormGroup.controls.discoverCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Master Card</label>\r\n    <input type=\"text\" formControlName=\"masterCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Master Card' then you need to add 'card type' input as 'master'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.masterCard.errors\">{{userFormGroup.controls.masterCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Diners Club Card</label>\r\n    <input type=\"text\" formControlName=\"dinersClubCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Diners Club Card' then you need to add 'card type' input as 'dinersClubCard'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.dinersClubCard.errors\">{{userFormGroup.controls.dinersClubCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"creditCardTypes":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\t,CreditCardType \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-creditCardTypes-validator',\r\n    templateUrl: './credit-card-credit-card-types.component.html'\r\n})\r\nexport class CreditCardCreditCardTypesValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tcardType:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\totherVisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"creditCardTypesExample":{"Notes":[],"Component":"","Html":"","Model":"otherVisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' })], "},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\t,CreditCardType \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-conditionalExpression-validator',\r\n    templateUrl: './credit-card-conditional-expression.component.html'\r\n})\r\nexport class CreditCardConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tcardType:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\totherVisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"otherVisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"visaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\t,CreditCardType \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-message-validator',\r\n    templateUrl: './credit-card-message.component.html'\r\n})\r\nexport class CreditCardMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tcardType:['',], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\totherVisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:(x,y) => x.cardType == \"visa\"   ,message:'Invalid Visa Credit Card Number.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"otherVisaCard:['', RxwebValidators.creditCard({creditCardTypes:[CreditCardType.Visa]  ,conditionalExpression:'x => x.cardType == \"visa\"'  ,message:'Invalid Visa Credit Card Number.' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\t,CreditCardType \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-dynamic-validator',\r\n    templateUrl: './credit-card-dynamic.component.html'\r\n})\r\nexport class CreditCardDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tvisaCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[CreditCardType.Visa],conditionalExpression:(x,y) => x.cardType == \"visa\" ,message:'Invalid Visa Credit Card Number.',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\totherVisaCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[CreditCardType.Visa],conditionalExpression:'x => x.cardType == \"visa\"',message:'Invalid Visa Credit Card Number.',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tamericanExpressCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.AmericanExpress ],conditionalExpression:'x => x.cardType == \"AmericanExpress\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tmaestroCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.Maestro ],conditionalExpression:'x => x.cardType == \"maestroCard\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tjcbCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.JCB ],conditionalExpression:'x => x.cardType == \"jcbCard\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tdiscoverCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.Discover ],conditionalExpression:'x => x.cardType == \"discoverCard\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tmasterCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.MasterCard ],conditionalExpression:'x => x.cardType == \"masterCard\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tdinersClubCard : {\r\n\t\t\t\tcreditCard :  {creditCardTypes:[ CreditCardType.DinersClub ],conditionalExpression:'x => x.cardType == \"dinersClubCard\"',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\tcardType:'', visaCard:'', otherVisaCard:'', americanExpressCard:'', maestroCard:'', jcbCard:'', discoverCard:'', masterCard:'', dinersClubCard:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Card Type</label>\r\n    <input type=\"text\" formControlName=\"cardType\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Visa Card</label>\r\n    <input type=\"text\" formControlName=\"visaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.visaCard.errors\">{{userFormGroup.controls.visaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Visa Card</label>\r\n    <input type=\"text\" formControlName=\"otherVisaCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Visa Card' then you need to add 'card type' input as 'visa'.<br/></small>\r\n    <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherVisaCard.errors\">{{userFormGroup.controls.otherVisaCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>American Express</label>\r\n    <input type=\"text\" formControlName=\"americanExpressCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'American Express' then you need to add 'card type' input as 'AmericanExpress'.<br/></small>\r\n    <small class=\"form-text text-muted\">Message comes from Reactive Form Config<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.americanExpressCard.errors\">{{userFormGroup.controls.americanExpressCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Maestro Card</label>\r\n    <input type=\"text\" formControlName=\"maestroCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'MaestroCard Card' then you need to add 'card type' input as 'maestro'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maestroCard.errors\">{{userFormGroup.controls.maestroCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>JCB Card</label>\r\n    <input type=\"text\" formControlName=\"jcbCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'JCB Card' then you need to add 'card type' input as 'jcb'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.jcbCard.errors\">{{userFormGroup.controls.jcbCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Discover Card</label>\r\n    <input type=\"text\" formControlName=\"discoverCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Discover Card' then you need to add 'card type' input as 'discover'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.discoverCard.errors\">{{userFormGroup.controls.discoverCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Master Card</label>\r\n    <input type=\"text\" formControlName=\"masterCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Master Card' then you need to add 'card type' input as 'master'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.masterCard.errors\">{{userFormGroup.controls.masterCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Diners Club Card</label>\r\n    <input type=\"text\" formControlName=\"dinersClubCard\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Diners Club Card' then you need to add 'card type' input as 'dinersClubCard'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.dinersClubCard.errors\">{{userFormGroup.controls.dinersClubCard.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators\t,CreditCardType \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-creditCard-add-validator',\r\n    templateUrl: './credit-card-add.component.html'\r\n})\r\nexport class CreditCardAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tcreditCardNumber:['', RxwebValidators.creditCard({creditCardTypes:[ CreditCardType.Visa ] })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Credit Card No.</label>\r\n    <input type=\"text\" formControlName=\"creditCardNumber\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Enter Visa Card No<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.creditCardNumber.errors\">{{userFormGroup.controls.creditCardNumber.errors.creditCard.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}