{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-complete-validator',\r\n    templateUrl: './email-complete.component.html'\r\n})\r\nexport class EmailCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\temail:['', RxwebValidators.email()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\trecoveryEmailAddress:['', RxwebValidators.email({conditionalExpression:(x,y) => x.email == \"abc@gmail.com\"  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbusinessEmailAddress:['', RxwebValidators.email({conditionalExpression:'x => x.email ==\"abc@gmail.com\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\totherEmailAddress:['', RxwebValidators.email({message:'Please enter valid email' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Email</label>\r\n    <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' or 'Business Email Address' then you need to add this input to 'abc@gmail.com'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.email.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Recovery Email Address</label>\r\n    <input type=\"text\" formControlName=\"recoveryEmailAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.recoveryEmailAddress.errors\">{{userFormGroup.controls.recoveryEmailAddress.errors.email.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Business Email Address</label>\r\n    <input type=\"text\" formControlName=\"businessEmailAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Business Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.businessEmailAddress.errors\">{{userFormGroup.controls.businessEmailAddress.errors.email.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Email Address</label>\r\n    <input type=\"text\" formControlName=\"otherEmailAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherEmailAddress.errors\">{{userFormGroup.controls.otherEmailAddress.errors.email.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-conditionalExpression-validator',\r\n    templateUrl: './email-conditional-expression.component.html'\r\n})\r\nexport class EmailConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\temail:['', RxwebValidators.email()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbusinessEmailAddress:['', RxwebValidators.email({conditionalExpression:'x => x.email ==\"abc@gmail.com\"' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\trecoveryEmailAddress:['', RxwebValidators.email({conditionalExpression:(x,y) => x.email == \"abc@gmail.com\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Email</label>\r\n    <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' or 'Business Email Address' then you need to add this input to 'abc@gmail.com'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.email.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Business Email Address</label>\r\n    <input type=\"text\" formControlName=\"businessEmailAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Business Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.businessEmailAddress.errors\">{{userFormGroup.controls.businessEmailAddress.errors.email.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Recovery Email Address</label>\r\n    <input type=\"text\" formControlName=\"recoveryEmailAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.recoveryEmailAddress.errors\">{{userFormGroup.controls.recoveryEmailAddress.errors.email.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"businessEmailAddress:['', RxwebValidators.email({conditionalExpression:'x => x.email ==\"abc@gmail.com\"' })], "},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"recoveryEmailAddress:['', RxwebValidators.email({conditionalExpression:(x,y) => x.email == \"abc@gmail.com\"  })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-message-validator',\r\n    templateUrl: './email-message.component.html'\r\n})\r\nexport class EmailMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\totherEmailAddress:['', RxwebValidators.email({message:'Please enter valid email' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Other Email Address</label>\r\n    <input type=\"text\" formControlName=\"otherEmailAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherEmailAddress.errors\">{{userFormGroup.controls.otherEmailAddress.errors.email.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"otherEmailAddress:['', RxwebValidators.email({message:'Please enter valid email' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-dynamic-validator',\r\n    templateUrl: './email-dynamic.component.html'\r\n})\r\nexport class EmailDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\temail : {\r\n\t\t\t\temail : true  \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\trecoveryEmailAddress : {\r\n\t\t\t\temail :  {conditionalExpression:(x,y) => x.email == \"abc@gmail.com\" ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tbusinessEmailAddress : {\r\n\t\t\t\temail :  {conditionalExpression:'x => x.email ==\"abc@gmail.com\"',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\totherEmailAddress : {\r\n\t\t\t\temail :  {message:'Please enter valid email',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\temail:'', recoveryEmailAddress:'', businessEmailAddress:'', otherEmailAddress:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Email</label>\r\n    <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' or 'Business Email Address' then you need to add this input to 'abc@gmail.com'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.email.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Recovery Email Address</label>\r\n    <input type=\"text\" formControlName=\"recoveryEmailAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Recovery Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.recoveryEmailAddress.errors\">{{userFormGroup.controls.recoveryEmailAddress.errors.email.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Business Email Address</label>\r\n    <input type=\"text\" formControlName=\"businessEmailAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Business Email Address' then you need to add 'email' field input to 'abc@gmail.com'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.businessEmailAddress.errors\">{{userFormGroup.controls.businessEmailAddress.errors.email.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Email Address</label>\r\n    <input type=\"text\" formControlName=\"otherEmailAddress\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherEmailAddress.errors\">{{userFormGroup.controls.otherEmailAddress.errors.email.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-email-add-validator',\r\n    templateUrl: './email-add.component.html'\r\n})\r\nexport class EmailAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\temail:['', RxwebValidators.email()], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Email</label>\r\n    <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.email.errors\">{{userFormGroup.controls.email.errors.email.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}