{"valueExample":"","conditionalExpressionExampleFunction":"","conditionalExpressionExampleString":"","messageExample":"","complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-complete-validator',\r\n    templateUrl: './min-number-complete.component.html'\r\n})\r\nexport class MinNumberCompleteValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup({\r\n\t\t\t\t\t\t\t\t\t\tmaths:['',RxwebValidators.minNumber({value:35 })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tscience:['',RxwebValidators.minNumber({value:35  ,message:'Number should not be less than 35' })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tenglish:['',RxwebValidators.minNumber({value:35  ,conditionalExpression:(x,y) =>{ return  x.maths == 50 } })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatstics:['',RxwebValidators.minNumber({value:35  ,conditionalExpression:x => x.maths == 50 })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Science</label>\r\n    <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>English</label>\r\n    <input type=\"text\" formControlName=\"english\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.english.errors\">{{resultInfoFormGroup.controls.english.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Statstics</label>\r\n    <input type=\"text\" formControlName=\"statstics\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statstics.errors\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"value":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-value-validator',\r\n    templateUrl: './min-number-value.component.html'\r\n})\r\nexport class MinNumberValueValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup({\r\n\t\t\t\t\t\t\t\t\t\tmaths:['',RxwebValidators.minNumber({value:35 })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-message-validator',\r\n    templateUrl: './min-number-message.component.html'\r\n})\r\nexport class MinNumberMessageValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup({\r\n\t\t\t\t\t\t\t\t\t\tscience:['',RxwebValidators.minNumber({value:35  ,message:'Number should not be less than 35' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Science</label>\r\n    <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpression":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-conditionalExpression-validator',\r\n    templateUrl: './min-number-conditional-expression.component.html'\r\n})\r\nexport class MinNumberConditionalExpressionValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup({\r\n\t\t\t\t\t\t\t\t\t\tmaths:['',RxwebValidators.minNumber({value:35 })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatstics:['',RxwebValidators.minNumber({value:35  ,conditionalExpression:x => x.maths == 50 })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tenglish:['',RxwebValidators.minNumber({value:35  ,conditionalExpression:(x,y) =>{ return  x.maths == 50 } })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Statstics</label>\r\n    <input type=\"text\" formControlName=\"statstics\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statstics.errors\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>English</label>\r\n    <input type=\"text\" formControlName=\"english\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.english.errors\">{{resultInfoFormGroup.controls.english.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-dynamic-validator',\r\n    templateUrl: './min-number-dynamic.component.html'\r\n})\r\nexport class MinNumberDynamicValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tmaths : {\r\n\t\t\t\tminNumber :  {value:35,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tscience : {\r\n\t\t\t\tminNumber :  {value:35,message:'Number should not be less than 35',} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tenglish : {\r\n\t\t\t\tminNumber :  {value:35,conditionalExpression:(x,y) =>{ return  x.maths == 50 },} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tstatstics : {\r\n\t\t\t\tminNumber :  {value:35,conditionalExpression:x => x.maths == 50,} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var resultInfo = {\r\n\t\t\tmaths:'', science:'', english:'', statstics:'', \r\n\t\t}\r\n\t\tthis.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Science</label>\r\n    <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>English</label>\r\n    <input type=\"text\" formControlName=\"english\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.english.errors\">{{resultInfoFormGroup.controls.english.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Statstics</label>\r\n    <input type=\"text\" formControlName=\"statstics\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statstics.errors\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-add-validator',\r\n    templateUrl: './min-number-add.component.html'\r\n})\r\nexport class MinNumberAddValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup({\r\n\t\t\t\t\t\t\t\t\t\tmaths:['',RxwebValidators.minNumber({value:35 })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}