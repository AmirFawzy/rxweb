{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-complete-validator',\r\n    templateUrl: './url-complete.component.html'\r\n})\r\nexport class UrlCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tadminWebsiteUrl:['', RxwebValidators.url()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqaWebsiteUrl:['', RxwebValidators.url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcustomerWebsiteUrl:['', RxwebValidators.url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  })], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaintenanceWebSiteUrl:['', RxwebValidators.url({message:'Is not the correct url pattern.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Admin Website Url</label>\r\n    <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>QA Website Url</label>\r\n    <input type=\"text\" formControlName=\"qaWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.qaWebsiteUrl.errors\">{{userFormGroup.controls.qaWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Customer Website Url</label>\r\n    <input type=\"text\" formControlName=\"customerWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.customerWebsiteUrl.errors\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Maintenance Website Url</label>\r\n    <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-conditionalExpression-validator',\r\n    templateUrl: './url-conditional-expression.component.html'\r\n})\r\nexport class UrlConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tadminWebsiteUrl:['', RxwebValidators.url()], \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tqaWebsiteUrl:['', RxwebValidators.url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Admin Website Url</label>\r\n    <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>QA Website Url</label>\r\n    <input type=\"text\" formControlName=\"qaWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.qaWebsiteUrl.errors\">{{userFormGroup.controls.qaWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"qaWebsiteUrl:['', RxwebValidators.url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  })], "},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"customerWebsiteUrl:['', RxwebValidators.url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  })], "},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-message-validator',\r\n    templateUrl: './url-message.component.html'\r\n})\r\nexport class UrlMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tmaintenanceWebSiteUrl:['', RxwebValidators.url({message:'Is not the correct url pattern.' })], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maintenance Website Url</label>\r\n    <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"maintenanceWebSiteUrl:['', RxwebValidators.url({message:'Is not the correct url pattern.' })], "},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-dynamic-validator',\r\n    templateUrl: './url-dynamic.component.html'\r\n})\r\nexport class UrlDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        formBuilderConfiguration.dynamicValidation = {\r\n\t\t\t\r\n\t\t\tadminWebsiteUrl : {\r\n\t\t\t\turl : true  \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tqaWebsiteUrl : {\r\n\t\t\t\turl :  {conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\" ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tcustomerWebsiteUrl : {\r\n\t\t\t\turl :  {conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"' ,} \r\n\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\tmaintenanceWebSiteUrl : {\r\n\t\t\t\turl :  {message:'Is not the correct url pattern.',} \r\n\t\t\t},\r\n\t\t\t        };\r\n\t\t var user = {\r\n\t\t\tadminWebsiteUrl:'', qaWebsiteUrl:'', customerWebsiteUrl:'', maintenanceWebSiteUrl:'', \r\n\t\t}\r\n\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Admin Website Url</label>\r\n    <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>QA Website Url</label>\r\n    <input type=\"text\" formControlName=\"qaWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.qaWebsiteUrl.errors\">{{userFormGroup.controls.qaWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Customer Website Url</label>\r\n    <input type=\"text\" formControlName=\"customerWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.customerWebsiteUrl.errors\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Maintenance Website Url</label>\r\n    <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,RxwebValidators \r\n} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-url-add-validator',\r\n    templateUrl: './url-add.component.html'\r\n})\r\nexport class UrlAddValidatorComponent implements OnInit {\r\n    webSiteInfoModelFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.webSiteInfoModelFormGroup = this.formBuilder.group({\r\n\t\t\t\t\t\t\t\t\t\tadminWebsiteUrl:['', RxwebValidators.url()], \r\n\t\t\t\t\t\t\t\t});\r\n    }\r\n}\r\n","Html":"<div>\r\n<form  [formGroup]=\"webSiteInfoModelFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Admin Website Url</label>\r\n    <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!webSiteInfoModelFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":null}}