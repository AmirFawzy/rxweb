{"complete":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-complete',\r\n    templateUrl: './url-complete.component.html'\r\n})\r\nexport class UrlCompleteComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Admin Website Url</label>\r\n    <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Customer Website Url</label>\r\n    <input type=\"text\" formControlName=\"customerWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.customerWebsiteUrl.errors\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Maintenance Website Url</label>\r\n    <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  url,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\r\n\t@url({conditionalExpressions:x => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\n\tcustomerWebsiteUrl: string;\r\n\r\n\t@url({message:'Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\r\n}\r\n"},"conditionalExpressions":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-conditionalExpressions',\r\n    templateUrl: './url-conditional-expressions.component.html'\r\n})\r\nexport class UrlConditionalExpressionsComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Admin Website Url</label>\r\n    <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Customer Website Url</label>\r\n    <input type=\"text\" formControlName=\"customerWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.customerWebsiteUrl.errors\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  url,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\r\n\t@url({conditionalExpressions:x => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\n\tcustomerWebsiteUrl: string;\r\n\r\n}\r\n"},"message":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-message',\r\n    templateUrl: './url-message.component.html'\r\n})\r\nexport class UrlMessageComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maintenance Website Url</label>\r\n    <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  url,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@url({message:'Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\r\n}\r\n"},"add":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { WebSiteInfoModel } from './web-site-info-model.model';\r\n\r\n@Component({\r\n    selector: 'app-url-add',\r\n    templateUrl: './url-add.component.html'\r\n})\r\nexport class UrlAddComponent implements OnInit {\r\n\r\n    webSiteInfoModelFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let webSiteInfoModel = new WebSiteInfoModel();\r\n        this.webSiteInfoModelFormGroup = this.formBuilder.formGroup(webSiteInfoModel);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"webSiteInfoModelFormGroup\" [formGroup]=\"webSiteInfoModelFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Admin Website Url</label>\r\n    <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!webSiteInfoModelFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  url,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class WebSiteInfoModel {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\r\n}\r\n"},"edit":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { WebSiteInfoModel } from './web-site-info-model.model';\r\n\r\n@Component({\r\n    selector: 'app-url-edit',\r\n    templateUrl: './url-edit.component.html'\r\n})\r\nexport class UrlEditComponent implements OnInit {\r\n\r\n    webSiteInfoModelFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/url/edit/web-site-info-model-data.json').subscribe(webSiteInfoModel => {\r\n            this.webSiteInfoModelFormGroup = this.formBuilder.formGroup<WebSiteInfoModel>(WebSiteInfoModel,webSiteInfoModel);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"webSiteInfoModelFormGroup\" [formGroup]=\"webSiteInfoModelFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Admin Website Url</label>\r\n    <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!webSiteInfoModelFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  url,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class WebSiteInfoModel {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\r\n}\r\n"}}