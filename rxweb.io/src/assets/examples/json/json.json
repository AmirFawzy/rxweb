{"complete":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-complete',\r\n    templateUrl: './json-complete.component.html'\r\n})\r\nexport class JsonCompleteComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"jsonInfoFormGroup\" [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location Json</label>\r\n    <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Location</label>\r\n    <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' field, then enter the value of location is 'India'  in Location textbox.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Address Json</label>\r\n    <input type=\"text\" formControlName=\"addressJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Conditional validation will be applied if the 'location' field have value India<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.addressJson.errors\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Contact Json</label>\r\n    <input type=\"text\" formControlName=\"contactJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.contactJson.errors\">{{jsonInfoFormGroup.controls.contactJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@json({message:'Enter the text in JSON format --> {key:value}' }) \r\n\tlocationJson: string;\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t@json({conditionalExpressions:(x,y)=>{ return x.location == \"India\" } }) \r\n\taddressJson: string;\r\n\r\n\t@json({message:'Enter only JSON type data' }) \r\n\tcontactJson: string;\r\n\r\n}\r\n"},"message":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-message',\r\n    templateUrl: './json-message.component.html'\r\n})\r\nexport class JsonMessageComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"jsonInfoFormGroup\" [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location Json</label>\r\n    <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@json({message:'Enter the text in JSON format --> {key:value}' }) \r\n\tlocationJson: string;\r\n\r\n}\r\n"},"conditionalExpressions":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-conditionalExpressions',\r\n    templateUrl: './json-conditional-expressions.component.html'\r\n})\r\nexport class JsonConditionalExpressionsComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"jsonInfoFormGroup\" [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location</label>\r\n    <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' field, then enter the value of location is 'India'  in Location textbox.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Address Json</label>\r\n    <input type=\"text\" formControlName=\"addressJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Conditional validation will be applied if the 'location' field have value India<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.addressJson.errors\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t@json({conditionalExpressions:(x,y)=>{ return x.location == \"India\" } }) \r\n\taddressJson: string;\r\n\r\n}\r\n"},"add":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-add',\r\n    templateUrl: './json-add.component.html'\r\n})\r\nexport class JsonAddComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let jsonInfo = new JsonInfo();\r\n        this.jsonInfoFormGroup = this.formBuilder.formGroup(jsonInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"jsonInfoFormGroup\" [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location Json</label>\r\n    <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@json() \r\n\tlocationJson: string;\r\n\r\n}\r\n"},"edit":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { JsonInfo } from './json-info.model';\r\n\r\n@Component({\r\n    selector: 'app-json-edit',\r\n    templateUrl: './json-edit.component.html'\r\n})\r\nexport class JsonEditComponent implements OnInit {\r\n\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/json/edit/json-info-data.json').subscribe(jsonInfo => {\r\n            this.jsonInfoFormGroup = this.formBuilder.formGroup<JsonInfo>(JsonInfo,jsonInfo);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"jsonInfoFormGroup\" [formGroup]=\"jsonInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Location Json</label>\r\n    <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  json,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class JsonInfo {\r\n\r\n\t@json() \r\n\tlocationJson: string;\r\n\r\n}\r\n"}}