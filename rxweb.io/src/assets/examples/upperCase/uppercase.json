{"complete":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-complete',\r\n    templateUrl: './upper-case-complete.component.html'\r\n})\r\nexport class UpperCaseCompleteComponent implements OnInit {\r\n\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"locationFormGroup\" [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>State Name</label>\r\n    <input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of upperCase on 'State Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.stateName.errors\">{{locationFormGroup.controls.stateName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>City Name</label>\r\n    <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.cityName.errors\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  upperCase,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\t@upperCase({conditionalExpressions:x => x.countryName == \"INDIA\" }) \r\n\tstateName: string;\r\n\t@upperCase({message:'You can enter only upperCase letters.' }) \r\n\tcityName: string;\r\n}\r\n"},"conditionalExpressions":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-conditionalExpressions',\r\n    templateUrl: './upper-case-conditional-expressions.component.html'\r\n})\r\nexport class UpperCaseConditionalExpressionsComponent implements OnInit {\r\n\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"locationFormGroup\" [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>State Name</label>\r\n    <input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply the validation of upperCase on 'State Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.stateName.errors\">{{locationFormGroup.controls.stateName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  upperCase,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\t@upperCase({conditionalExpressions:x => x.countryName == \"INDIA\" }) \r\n\tstateName: string;\r\n}\r\n"},"message":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-message',\r\n    templateUrl: './upper-case-message.component.html'\r\n})\r\nexport class UpperCaseMessageComponent implements OnInit {\r\n\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"locationFormGroup\" [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>City Name</label>\r\n    <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.cityName.errors\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  upperCase,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@upperCase({message:'You can enter only upperCase letters.' }) \r\n\tcityName: string;\r\n}\r\n"},"add":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-add',\r\n    templateUrl: './upper-case-add.component.html'\r\n})\r\nexport class UpperCaseAddComponent implements OnInit {\r\n\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"locationFormGroup\" [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  upperCase,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n}\r\n"},"edit":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-edit',\r\n    templateUrl: './upper-case-edit.component.html'\r\n})\r\nexport class UpperCaseEditComponent implements OnInit {\r\n\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/upperCase/edit/location-data.json').subscribe(location => {\r\n            this.locationFormGroup = this.formBuilder.formGroup<Location>(Location,location);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"locationFormGroup\" [formGroup]=\"locationFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.countryName.errors\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  upperCase,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n}\r\n"}}