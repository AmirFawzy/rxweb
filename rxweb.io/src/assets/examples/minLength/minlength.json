{"complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLength-complete',\r\n    templateUrl: './min-length-complete.component.html'\r\n})\r\nexport class MinLengthCompleteComponent implements OnInit {\r\n\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"contactFormGroup\" [formGroup]=\"contactFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' or 'State Code', then you need to add 'Country Name' input as 'India'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Mobile No.</label>\r\n    <input type=\"text\" formControlName=\"mobileNo\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n    <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.mobileNo.errors\">{{contactFormGroup.controls.mobileNo.errors.minLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Land line No</label>\r\n    <input type=\"text\" formControlName=\"landLineNo\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.landLineNo.errors\">{{contactFormGroup.controls.landLineNo.errors.minLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Country Code</label>\r\n    <input type=\"text\" formControlName=\"countryCode\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply validation here, write 'India' in 'Country Name' textbox because it is conditional expression.<br/></small>\r\n    <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryCode.errors\">{{contactFormGroup.controls.countryCode.errors.minLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>State Code</label>\r\n    <input type=\"text\" formControlName=\"stateCode\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply validation here, write 'India' in 'Country Name' textbox because it is conditional expression.<br/></small>\r\n    <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.stateCode.errors\">{{contactFormGroup.controls.stateCode.errors.minLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minLength,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Contact {\r\n\r\n\t@prop()\r\n\tcountryName: string;\r\n\r\n\t@minLength({value:10 }) \r\n\tmobileNo: string;\r\n\r\n\t@minLength({value:8  ,message:'Minimum 8 characters are allowed' }) \r\n\tlandLineNo: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minLength({value:3  ,conditionalExpression:(x,y)=>{ return x.countryName == \"India\"} }) \r\n\tcountryCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@minLength({value:3  ,conditionalExpression:x => x.countryName == \"India\" }) \r\n\tstateCode: string;\r\n\r\n}\r\n"},"value":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLength-value',\r\n    templateUrl: './min-length-value.component.html'\r\n})\r\nexport class MinLengthValueComponent implements OnInit {\r\n\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"contactFormGroup\" [formGroup]=\"contactFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Mobile No.</label>\r\n    <input type=\"text\" formControlName=\"mobileNo\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n    <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.mobileNo.errors\">{{contactFormGroup.controls.mobileNo.errors.minLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minLength,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Contact {\r\n\r\n\t@minLength({value:10 }) \r\n\tmobileNo: string;\r\n\r\n}\r\n"},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLength-message',\r\n    templateUrl: './min-length-message.component.html'\r\n})\r\nexport class MinLengthMessageComponent implements OnInit {\r\n\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"contactFormGroup\" [formGroup]=\"contactFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Land line No</label>\r\n    <input type=\"text\" formControlName=\"landLineNo\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n    <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.landLineNo.errors\">{{contactFormGroup.controls.landLineNo.errors.minLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minLength,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Contact {\r\n\r\n\t@minLength({value:8  ,message:'Minimum 8 characters are allowed' }) \r\n\tlandLineNo: string;\r\n\r\n}\r\n"},"conditionalExpression":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLength-conditionalExpression',\r\n    templateUrl: './min-length-conditional-expression.component.html'\r\n})\r\nexport class MinLengthConditionalExpressionComponent implements OnInit {\r\n\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"contactFormGroup\" [formGroup]=\"contactFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' or 'State Code', then you need to add 'Country Name' input as 'India'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>State Code</label>\r\n    <input type=\"text\" formControlName=\"stateCode\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply validation here, write 'India' in 'Country Name' textbox because it is conditional expression.<br/></small>\r\n    <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.stateCode.errors\">{{contactFormGroup.controls.stateCode.errors.minLength.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Country Code</label>\r\n    <input type=\"text\" formControlName=\"countryCode\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">To apply validation here, write 'India' in 'Country Name' textbox because it is conditional expression.<br/></small>\r\n    <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n    <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryCode.errors\">{{contactFormGroup.controls.countryCode.errors.minLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minLength,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Contact {\r\n\r\n\t@prop()\r\n\tcountryName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@minLength({value:3  ,conditionalExpression:x => x.countryName == \"India\" }) \r\n\tstateCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minLength({value:3  ,conditionalExpression:(x,y)=>{ return x.countryName == \"India\"} }) \r\n\tcountryCode: string;\r\n\r\n}\r\n"},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLength-add',\r\n    templateUrl: './min-length-add.component.html'\r\n})\r\nexport class MinLengthAddComponent implements OnInit {\r\n\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"contactFormGroup\" [formGroup]=\"contactFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minLength,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Contact {\r\n\r\n\t@minLength({value:8 }) \r\n\tcountryName: string;\r\n\r\n}\r\n"},"edit":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLength-edit',\r\n    templateUrl: './min-length-edit.component.html'\r\n})\r\nexport class MinLengthEditComponent implements OnInit {\r\n\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/minLength/edit/contact-data.json').subscribe(contact => {\r\n            this.contactFormGroup = this.formBuilder.formGroup<Contact>(Contact,contact);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"contactFormGroup\" [formGroup]=\"contactFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minLength,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Contact {\r\n\r\n\t@minLength({value:8 }) \r\n\tcountryName: string;\r\n\r\n}\r\n"}}