{"complete":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minnumber-complete',\r\n    templateUrl: './min-number-complete.component.html'\r\n})\r\nexport class MinNumberCompleteComponent implements OnInit {\r\n\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"resultInfoFormGroup\" [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Science</label>\r\n    <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Statastics</label>\r\n    <input type=\"text\" formControlName=\"statastics\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statastics.errors\">{{resultInfoFormGroup.controls.statastics.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minNumber,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n\t@minNumber({value:35  ,message:'Number should not be less than 35' }) \r\n\tscience: number;\r\n\r\n\t@minNumber({value:35  ,conditionalExpressions:x => x.maths == 50 }) \r\n\tstatastics: number;\r\n\r\n}\r\n"},"value":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minnumber-value',\r\n    templateUrl: './min-number-value.component.html'\r\n})\r\nexport class MinNumberValueComponent implements OnInit {\r\n\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"resultInfoFormGroup\" [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minNumber,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n}\r\n"},"message":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minnumber-message',\r\n    templateUrl: './min-number-message.component.html'\r\n})\r\nexport class MinNumberMessageComponent implements OnInit {\r\n\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"resultInfoFormGroup\" [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Science</label>\r\n    <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minNumber,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35  ,message:'Number should not be less than 35' }) \r\n\tscience: number;\r\n\r\n}\r\n"},"conditionalExpressions":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minnumber-conditionalExpressions',\r\n    templateUrl: './min-number-conditional-expressions.component.html'\r\n})\r\nexport class MinNumberConditionalExpressionsComponent implements OnInit {\r\n\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"resultInfoFormGroup\" [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Statastics</label>\r\n    <input type=\"text\" formControlName=\"statastics\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.statastics.errors\">{{resultInfoFormGroup.controls.statastics.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minNumber,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n\t@minNumber({value:35  ,conditionalExpressions:x => x.maths == 50 }) \r\n\tstatastics: number;\r\n\r\n}\r\n"},"add":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minnumber-add',\r\n    templateUrl: './min-number-add.component.html'\r\n})\r\nexport class MinNumberAddComponent implements OnInit {\r\n\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"resultInfoFormGroup\" [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minNumber,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n}\r\n"},"edit":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minnumber-edit',\r\n    templateUrl: './min-number-edit.component.html'\r\n})\r\nexport class MinNumberEditComponent implements OnInit {\r\n\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/minnumber/edit/result-info-data.json').subscribe(resultInfo => {\r\n            this.resultInfoFormGroup = this.formBuilder.formGroup<ResultInfo>(ResultInfo,resultInfo);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"resultInfoFormGroup\" [formGroup]=\"resultInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Maths</label>\r\n    <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  minNumber,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\r\n}\r\n"}}