{"complete":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThan-complete',\r\n    templateUrl: './less-than-complete.component.html'\r\n})\r\nexport class LessThanCompleteComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Obtained Marks</label>\r\n    <input type=\"text\" formControlName=\"obtainedMarks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Passing Marks' then need to add this input less than '35'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.obtainedMarks.errors\">{{userFormGroup.controls.obtainedMarks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Passing Marks</label>\r\n    <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Passing Marks' then you need to add 'Obtained Marks' field less than '35'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.passingMarks.errors\">{{userFormGroup.controls.passingMarks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Other Marks</label>\r\n    <input type=\"text\" formControlName=\"otherMarks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherMarks.errors\">{{userFormGroup.controls.otherMarks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  lessThan,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tobtainedMarks: number;\r\n\t@lessThan({fieldName:'obtainedMarks'  ,conditionalExpressions:x => x.obtainedMarks < 35  }) \r\n\tpassingMarks: number;\r\n\t@lessThan({fieldName:'obtainedMarks'  ,message:'Please enter number greater than 100.' }) \r\n\totherMarks: number;\r\n}\r\n"},"fieldName":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThan-fieldName',\r\n    templateUrl: './less-than-field-name.component.html'\r\n})\r\nexport class LessThanFieldNameComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Passing Marks</label>\r\n    <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Passing Marks' then you need to add 'Obtained Marks' field less than '35'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.passingMarks.errors\">{{userFormGroup.controls.passingMarks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  lessThan,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@lessThan({fieldName:'obtainedMarks'  ,conditionalExpressions:x => x.obtainedMarks < 35  }) \r\n\tpassingMarks: number;\r\n}\r\n"},"conditionalExpressions":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThan-conditionalExpressions',\r\n    templateUrl: './less-than-conditional-expressions.component.html'\r\n})\r\nexport class LessThanConditionalExpressionsComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Obtained Marks</label>\r\n    <input type=\"text\" formControlName=\"obtainedMarks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Passing Marks' then need to add this input less than '35'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.obtainedMarks.errors\">{{userFormGroup.controls.obtainedMarks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Passing Marks</label>\r\n    <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Passing Marks' then you need to add 'Obtained Marks' field less than '35'.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.passingMarks.errors\">{{userFormGroup.controls.passingMarks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  lessThan,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tobtainedMarks: number;\r\n\t@lessThan({fieldName:'obtainedMarks'  ,conditionalExpressions:x => x.obtainedMarks < 35  }) \r\n\tpassingMarks: number;\r\n}\r\n"},"message":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThan-message',\r\n    templateUrl: './less-than-message.component.html'\r\n})\r\nexport class LessThanMessageComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Other Marks</label>\r\n    <input type=\"text\" formControlName=\"otherMarks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherMarks.errors\">{{userFormGroup.controls.otherMarks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  lessThan,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@lessThan({fieldName:'obtainedMarks'  ,message:'Please enter number greater than 100.' }) \r\n\totherMarks: number;\r\n}\r\n"},"add":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThan-add',\r\n    templateUrl: './less-than-add.component.html'\r\n})\r\nexport class LessThanAddComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Marks</label>\r\n    <input type=\"text\" formControlName=\"marks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.marks.errors\">{{userFormGroup.controls.marks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Passing Marks</label>\r\n    <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">This is checking less than validation for PassingMarks must be less than to marks.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.passingMarks.errors\">{{userFormGroup.controls.passingMarks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  lessThan,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tmarks: number;\r\n\t@lessThan({fieldName:'marks' }) \r\n\tpassingMarks: number;\r\n}\r\n"},"edit":{"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThan-edit',\r\n    templateUrl: './less-than-edit.component.html'\r\n})\r\nexport class LessThanEditComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,\t\tprivate http: HttpClient\r\n\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/lessthan/edit/user-data.json').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>Marks</label>\r\n    <input type=\"text\" formControlName=\"marks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.marks.errors\">{{userFormGroup.controls.marks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Passing Marks</label>\r\n    <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n    <small class=\"form-text text-muted\">This is checking less than validation for PassingMarks must be less than to marks.<br/></small>\r\n    <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.passingMarks.errors\">{{userFormGroup.controls.passingMarks.errors.lessThan.message}}<br/></small>\r\n</div>\r\n<button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>","Model":"import {  lessThan,prop,} from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tmarks: number;\r\n\t@lessThan({fieldName:'marks' }) \r\n\tpassingMarks: number;\r\n}\r\n"}}